{
  "project": {},
  "files": {
    "addon/components/fountainhead-class/header.js": {
      "name": "addon/components/fountainhead-class/header.js",
      "modules": {},
      "classes": {
        "FountainHead.Class.Header": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-class/item.js": {
      "name": "addon/components/fountainhead-class/item.js",
      "modules": {},
      "classes": {
        "FountainHead.Class.ClassItem": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-class/items-container.js": {
      "name": "addon/components/fountainhead-class/items-container.js",
      "modules": {},
      "classes": {
        "FountainHeadClass.ItemsContainer": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-class/meta.js": {
      "name": "addon/components/fountainhead-class/meta.js",
      "modules": {},
      "classes": {
        "FountainHead.Class.Meta": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-pages/class.js": {
      "name": "addon/components/fountainhead-pages/class.js",
      "modules": {},
      "classes": {
        "FountainHeadPages.Class": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-pages/docs.js": {
      "name": "addon/components/fountainhead-pages/docs.js",
      "modules": {},
      "classes": {
        "FountainHead.Docs": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-pages/file.js": {
      "name": "addon/components/fountainhead-pages/file.js",
      "modules": {},
      "classes": {
        "FountainHead.File": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-pages/module.js": {
      "name": "addon/components/fountainhead-pages/module.js",
      "modules": {},
      "classes": {
        "FountainHead.Module": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-sidebar/sidebar.js": {
      "name": "addon/components/fountainhead-sidebar/sidebar.js",
      "modules": {},
      "classes": {
        "FountainHead.Docs.Sidebar": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/cross-link.js": {
      "name": "addon/components/cross-link.js",
      "modules": {},
      "classes": {
        "CrossLink": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-alert.js": {
      "name": "addon/components/fountainhead-alert.js",
      "modules": {},
      "classes": {
        "FountainHead.Shared.Alert": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-button.js": {
      "name": "addon/components/fountainhead-button.js",
      "modules": {},
      "classes": {
        "FountainHead.Shared.Button": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-get-started.js": {
      "name": "addon/components/fountainhead-get-started.js",
      "modules": {},
      "classes": {},
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-repo-link.js": {
      "name": "addon/components/fountainhead-repo-link.js",
      "modules": {},
      "classes": {
        "FountainHead.Docs.Github": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-runtime-description.js": {
      "name": "addon/components/fountainhead-runtime-description.js",
      "modules": {},
      "classes": {
        "Fountainhead.RuntimeDescription": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-svg.js": {
      "name": "addon/components/fountainhead-svg.js",
      "modules": {},
      "classes": {
        "FountainHead.Shared.CoreSVG": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-tabs-content.js": {
      "name": "addon/components/fountainhead-tabs-content.js",
      "modules": {},
      "classes": {
        "CoreTabs.Content": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-tabs.js": {
      "name": "addon/components/fountainhead-tabs.js",
      "modules": {},
      "classes": {
        "CoreTabs": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/components/fountainhead-welcome.js": {
      "name": "addon/components/fountainhead-welcome.js",
      "modules": {},
      "classes": {
        "FountainHead.Header": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/controllers/docs/classes.js": {
      "name": "addon/controllers/docs/classes.js",
      "modules": {},
      "classes": {},
      "fors": {},
      "namespaces": {}
    },
    "addon/helpers/eq.js": {
      "name": "addon/helpers/eq.js",
      "modules": {},
      "classes": {
        "Helper.Eq": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/routes/docs/classes.js": {
      "name": "addon/routes/docs/classes.js",
      "modules": {},
      "classes": {
        "Docs.Classes": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/routes/docs/files.js": {
      "name": "addon/routes/docs/files.js",
      "modules": {},
      "classes": {
        "Docs.Files": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/routes/docs/modules.js": {
      "name": "addon/routes/docs/modules.js",
      "modules": {},
      "classes": {
        "Docs.Modules": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/services/fountainhead.js": {
      "name": "addon/services/fountainhead.js",
      "modules": {},
      "classes": {
        "Fountainhead": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "addon/_module-definition.js": {
      "name": "addon/_module-definition.js",
      "modules": {
        "Addon": 1
      },
      "classes": {},
      "fors": {},
      "namespaces": {}
    },
    "app/instance-initializers/fountainhead-routes.js": {
      "name": "app/instance-initializers/fountainhead-routes.js",
      "modules": {
        "App": 1
      },
      "classes": {
        "FountainheadRoutes": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "blueprints/ember-fountainhead/index.js": {
      "name": "blueprints/ember-fountainhead/index.js",
      "modules": {
        "Blueprints": 1
      },
      "classes": {
        "EmberFountainhead.Index": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/data-types/_module.js": {
      "name": "lib/data-types/_module.js",
      "modules": {
        "Lib": 1
      },
      "classes": {},
      "fors": {},
      "namespaces": {}
    },
    "lib/data-types/generate-classes.js": {
      "name": "lib/data-types/generate-classes.js",
      "modules": {},
      "classes": {
        "DataTypes.GenerateClasses": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/data-types/generate-modules.js": {
      "name": "lib/data-types/generate-modules.js",
      "modules": {},
      "classes": {
        "DataTypes.GenerateModules": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/data-types/generate-src-file.js": {
      "name": "lib/data-types/generate-src-file.js",
      "modules": {},
      "classes": {
        "DataTypes.GenerateSrcFile": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/create-dirs.js": {
      "name": "lib/create-dirs.js",
      "modules": {},
      "classes": {
        "createDirs": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/decorate-config.js": {
      "name": "lib/decorate-config.js",
      "modules": {},
      "classes": {
        "decorateConfig": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/generate-fountainhead-data.js": {
      "name": "lib/generate-fountainhead-data.js",
      "modules": {},
      "classes": {
        "generateFountainheadData": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/index.js": {
      "name": "lib/index.js",
      "modules": {},
      "classes": {
        "Index": 1
      },
      "fors": {},
      "namespaces": {}
    },
    "lib/parse-markdown.js": {
      "name": "lib/parse-markdown.js",
      "modules": {},
      "classes": {
        "parseMarkdown": 1
      },
      "fors": {},
      "namespaces": {}
    }
  },
  "modules": {
    "Addon": {
      "name": "Addon",
      "submodules": {},
      "elements": {},
      "classes": {
        "FountainHead.Class.Header": 1,
        "FountainHead.Class.ClassItem": 1,
        "FountainHeadClass.ItemsContainer": 1,
        "FountainHead.Class.Meta": 1,
        "FountainHeadPages.Class": 1,
        "FountainHead.Docs": 1,
        "FountainHead.File": 1,
        "FountainHead.Module": 1,
        "FountainHead.Docs.Sidebar": 1,
        "CrossLink": 1,
        "FountainHead.Shared.Alert": 1,
        "FountainHead.Shared.Button": 1,
        "FountainHead.Header": 1,
        "FountainHead.Docs.Github": 1,
        "Fountainhead.RuntimeDescription": 1,
        "FountainHead.Shared.CoreSVG": 1,
        "CoreTabs.Content": 1,
        "CoreTabs": 1,
        "Docs.Classes": 1,
        "Helper.Eq": 1,
        "Docs.Files": 1,
        "Docs.Modules": 1,
        "Fountainhead": 1
      },
      "fors": {},
      "namespaces": {},
      "tag": "module",
      "file": "addon/services/fountainhead.js",
      "line": 7,
      "description": "<p>Addon module contains the components, routes and utils for generating docs\napplication.</p>\n"
    },
    "App": {
      "name": "App",
      "submodules": {},
      "elements": {},
      "classes": {
        "FountainheadRoutes": 1
      },
      "fors": {},
      "namespaces": {},
      "tag": "module",
      "file": "app/instance-initializers/fountainhead-routes.js",
      "line": 11,
      "description": "<p>Fountainhead's routes are automatically mounted to the consuming application's\nrouter through an <code>instance-initializer</code>. We're currently directly importing\nthe consuming application's router by declaring this initializer in the <code>/app</code>\ndirectory instead of the <code>/addon</code> directory.</p>\n"
    },
    "Blueprints": {
      "name": "Blueprints",
      "submodules": {},
      "elements": {},
      "classes": {
        "EmberFountainhead.Index": 1
      },
      "fors": {},
      "namespaces": {},
      "tag": "module",
      "file": "blueprints/ember-fountainhead/index.js",
      "line": 12,
      "description": "<p>When an addon has an <code>index.js</code> file under <code>/blueprints/ADDON_NAME</code>, Ember\nCLI will call the hooks defined there. We use this to handle anything that\nneeds to be updated in the consuming application only once during the addon\nsetup.</p>\n"
    },
    "Lib": {
      "name": "Lib",
      "submodules": {},
      "elements": {},
      "classes": {
        "DataTypes.GenerateClasses": 1,
        "DataTypes.GenerateModules": 1,
        "DataTypes.GenerateSrcFile": 1,
        "createDirs": 1,
        "decorateConfig": 1,
        "generateFountainheadData": 1,
        "Index": 1,
        "parseMarkdown": 1
      },
      "fors": {},
      "namespaces": {},
      "tag": "module",
      "file": "lib/parse-markdown.js",
      "line": 28,
      "description": "<p>Modules in the <code>./lib</code> directory handle generating -&gt; parsing -&gt; decorating -&gt;\nsaving all data required for Fountainhead. Fountainhead is backed by REST APIs\nrather than static file generation. Each module, class and file are saved as\nJSON fetched on demand by the client.</p>\n<p>See this module for details/classes on the Node data generation application.\nSee below for a high level overview of the flow of the application through\nthe related modules.</p>\n<h2>Lib Classes Overview:</h2>\n<h4>Validation &amp;&amp; Preparation</h4>\n<ul>\n<li><code>index.js</code>: Primary entry point to Node application</li>\n<li><code>decorate-config</code>: Validate and merge addon configs, package JSON and default configs</li>\n<li><code>create-dirs</code>: Create directories required for JSON files</li>\n</ul>\n<h4>Generation &amp;&amp; Decoration</h4>\n<ul>\n<li><code>generate-fountainhead-data</code>: Coordinates parsing raw YUIDoc using <code>data-types</code> modules</li>\n<li><code>data-types/generate-modules</code>: Parse &amp;&amp; decorate raw modules data</li>\n<li><code>data-types/generate-classes</code>: Parse &amp;&amp; decorate raw class &amp;&amp; class items data</li>\n<li><code>data-types/generate-file</code>: Parse &amp;&amp; decorate source files</li>\n<li><code>parse-markdown</code>: Called for every description, parses markdown contents to HTML</li>\n</ul>\n"
    }
  },
  "classes": {
    "FountainHead.Class.Header": {
      "name": "FountainHead.Class.Header",
      "shortname": "FountainHead.Class.Header",
      "classitems": [
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 34,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-page-header']",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        },
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 23,
          "description": "<p>Name of the class. Is generated by the <code>@constructor</code> tag.</p>\n",
          "itemtype": "property",
          "name": "name",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        },
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 16,
          "description": "<p>Src file id for this file. Used for link to for source.</p>\n",
          "itemtype": "property",
          "name": "srcFileId",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        },
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 40,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'h2'",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-class/header.js",
      "line": 4,
      "description": "<p>Docs Page class header. Contains class name with a link to source file for\nclass.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 34,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-page-header']",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        },
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 23,
          "description": "<p>Name of the class. Is generated by the <code>@constructor</code> tag.</p>\n",
          "itemtype": "property",
          "name": "name",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        },
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 16,
          "description": "<p>Src file id for this file. Used for link to for source.</p>\n",
          "itemtype": "property",
          "name": "srcFileId",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        },
        {
          "file": "addon/components/fountainhead-class/header.js",
          "line": 40,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'h2'",
          "class": "FountainHead.Class.Header",
          "srcFileId": "addon_components_fountainhead-class_header.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-class_header.js"
    },
    "FountainHead.Class.ClassItem": {
      "name": "FountainHead.Class.ClassItem",
      "shortname": "FountainHead.Class.ClassItem",
      "classitems": [
        {
          "file": "addon/components/fountainhead-class/item.js",
          "line": 15,
          "description": "<p>Model backing this class item, generated by YUIDoc.\nTODO: Document props of classItem and how they get used in template</p>\n",
          "itemtype": "property",
          "name": "classItem",
          "type": "{Object}",
          "class": "FountainHead.Class.ClassItem",
          "srcFileId": "addon_components_fountainhead-class_item.js"
        },
        {
          "file": "addon/components/fountainhead-class/item.js",
          "line": 25,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-classitem']",
          "class": "FountainHead.Class.ClassItem",
          "srcFileId": "addon_components_fountainhead-class_item.js"
        },
        {
          "file": "addon/components/fountainhead-class/item.js",
          "line": 35,
          "description": "<p>Set the unique id that the <code>class-items-container</code> expects for each class\nitem in init. Id is the <code>itemtype_name</code> and is used to scroll to the\nitem when the name is clicked in the index list panel.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "FountainHead.Class.ClassItem",
          "srcFileId": "addon_components_fountainhead-class_item.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-class/item.js",
      "line": 4,
      "description": "<p>Individual class property or method documentation item</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/fountainhead-class/item.js",
          "line": 35,
          "description": "<p>Set the unique id that the <code>class-items-container</code> expects for each class\nitem in init. Id is the <code>itemtype_name</code> and is used to scroll to the\nitem when the name is clicked in the index list panel.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "FountainHead.Class.ClassItem",
          "srcFileId": "addon_components_fountainhead-class_item.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/fountainhead-class/item.js",
          "line": 15,
          "description": "<p>Model backing this class item, generated by YUIDoc.\nTODO: Document props of classItem and how they get used in template</p>\n",
          "itemtype": "property",
          "name": "classItem",
          "type": "{Object}",
          "class": "FountainHead.Class.ClassItem",
          "srcFileId": "addon_components_fountainhead-class_item.js"
        },
        {
          "file": "addon/components/fountainhead-class/item.js",
          "line": 25,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-classitem']",
          "class": "FountainHead.Class.ClassItem",
          "srcFileId": "addon_components_fountainhead-class_item.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-class_item.js"
    },
    "FountainHeadClass.ItemsContainer": {
      "name": "FountainHeadClass.ItemsContainer",
      "shortname": "FountainHeadClass.ItemsContainer",
      "classitems": [
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 108,
          "description": "<p>Internal method to handle selecting a tab panel and then scrolling to an\nitem in that panel.</p>\n<p>Method will:</p>\n<ul>\n<li>Change to the panel matching the doc item type</li>\n<li>Scroll to that item using the itemtype and name to construct the DOM id</li>\n</ul>\n",
          "itemtype": "method",
          "name": "_scrollToItem",
          "access": "protected",
          "tagname": "",
          "params": [
            {
              "name": "classitem",
              "description": "<p>Backing class item</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "itemtype",
                  "description": "Type for item of: `method`/`property`/`event`",
                  "type": "String"
                },
                {
                  "name": "name",
                  "description": "Name of item",
                  "type": "String"
                }
              ]
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 146,
          "description": "<p>Handles finding the classitem model using the <code>item</code> query param value.\nIf a classitem is found, initiate a scroll.</p>\n",
          "itemtype": "method",
          "name": "_scrollToQueryParamItem",
          "access": "protected",
          "tagname": "",
          "params": [
            {
              "name": "item",
              "description": "<p>The item query param identifying which classitem to scroll to</p>\n",
              "type": "!string"
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 79,
          "description": "<p>The currently active tab. This is controlled by this component to allow\nus to change the tab whenever a documentation item is clicked in the index\npanel.</p>\n",
          "itemtype": "property",
          "name": "activeTab",
          "type": "{string}",
          "access": "protected",
          "tagname": "",
          "default": "indexPanel",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 89,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-tabs-container']",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 24,
          "description": "<p>Array of <em>ALL</em> items for this class. Used to find the type when an item is\nspecified in a query param.</p>\n",
          "itemtype": "property",
          "name": "classitems",
          "type": "{Array}",
          "default": "[]",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 95,
          "description": "<p>The panel that that the tabs should render on creation. The tabs component\ntracks this separately and it needs to be updated separately when a class\npage is loaded with an item query parameter.</p>\n",
          "itemtype": "property",
          "name": "defaultTab",
          "type": "{string}",
          "default": "'indexPanel'",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 176,
          "description": "<p>Handle resetting tabs container to the index panel any time that this\ncomponent's attrs update. The only props passed in to this component are\nthe class items for the container, so we know if they change in any way\nthat this is the right time to update the tabs panel.</p>\n<p>NOTE: GUESS WHAT! This hook doens't only get called when passed props\nchange! There is some crazy behavior where this hook will get called ONCE\nand only ONCE when an internal property changes after the props for this\ncomponent has changed. Super weird. For now we're 'fixing' it by also\npassing in the class name and using that as a check to reset the <code>activeTab</code></p>\n",
          "itemtype": "event",
          "name": "didUpdateAttrs",
          "params": [
            {
              "name": "attrs",
              "description": "<p>Object with <code>oldAttrs</code> and <code>newAttrs</code></p>\n",
              "type": "Object"
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 32,
          "description": "<p>This class' array of event documentation items.</p>\n",
          "itemtype": "property",
          "name": "event",
          "type": "{Array}",
          "default": "[]",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 218,
          "description": "<p>Action bound to each documentation item in the index panel. Clicking any\nitem will trigger this with the documentation item as an argument. Use\nthe passed doc item to internally call\n{{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToItem'}}\nto scroll to clicked item.</p>\n",
          "itemtype": "method",
          "name": "goToItem",
          "action": "",
          "params": [
            {
              "name": "classitem",
              "description": "<p>Backing classitem</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "itemtype",
                  "description": "Type for item of: `method`/`property`/`event`",
                  "type": "String"
                },
                {
                  "name": "name",
                  "description": "Name for classitem",
                  "type": "String"
                }
              ]
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 202,
          "description": "<p>Check for a passed <code>item</code> query param. When it exists call\n{{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToQueryParamItem'}}\nto scroll to that cross linked item.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 40,
          "description": "<p>Item query param passed down from controller. When this property is present,\nor changes handle scrolling to the item. When the specified doc class is\nthe same but the item query param is different the model hooks will not be\ncalled, so we need to handle scrolling to the item when it changes.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{?string}",
          "default": "null",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 51,
          "description": "<p>This class' array of method documentation items.</p>\n",
          "itemtype": "property",
          "name": "method",
          "type": "{Array}",
          "default": "[]",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 59,
          "description": "<p>Name of the class. Is checked in <code>didUpdateAttrs</code> to know if the tabs\nshould be reset to the index panel</p>\n",
          "itemtype": "property",
          "name": "name",
          "type": "{string}",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 67,
          "description": "<p>This class' array of property documentation items.</p>\n",
          "itemtype": "property",
          "name": "property",
          "type": "{Array}",
          "default": "[]",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 233,
          "description": "<p>Closure action passed into the tab component. This action is called\nwhenever a tab is clicked with the id of the tab. Use this to update the\ncontrolling <code>activeTab</code> property for the tabs DDAU style.</p>\n",
          "itemtype": "method",
          "name": "tabsChanged",
          "action": "",
          "params": [
            {
              "name": "tab",
              "description": "<p>Backing object for a given tab</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "elementId",
                  "description": "The id of the tab, controls current tab displayed",
                  "type": "String"
                }
              ]
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 7,
      "description": "<p>Tab container for the class' documentation items. Component handles running\na controlled instance of <code>core-tabs</code> by tracking <code>activeTab</code> internally and\npassing <code>tabsChanged</code> to the <code>core-tabs</code> instance.</p>\n<p>The active tab is reset to the index panel anytime that the <code>name</code> (of the\nclass) changes.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 108,
          "description": "<p>Internal method to handle selecting a tab panel and then scrolling to an\nitem in that panel.</p>\n<p>Method will:</p>\n<ul>\n<li>Change to the panel matching the doc item type</li>\n<li>Scroll to that item using the itemtype and name to construct the DOM id</li>\n</ul>\n",
          "itemtype": "method",
          "name": "_scrollToItem",
          "access": "protected",
          "tagname": "",
          "params": [
            {
              "name": "classitem",
              "description": "<p>Backing class item</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "itemtype",
                  "description": "Type for item of: `method`/`property`/`event`",
                  "type": "String"
                },
                {
                  "name": "name",
                  "description": "Name of item",
                  "type": "String"
                }
              ]
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 146,
          "description": "<p>Handles finding the classitem model using the <code>item</code> query param value.\nIf a classitem is found, initiate a scroll.</p>\n",
          "itemtype": "method",
          "name": "_scrollToQueryParamItem",
          "access": "protected",
          "tagname": "",
          "params": [
            {
              "name": "item",
              "description": "<p>The item query param identifying which classitem to scroll to</p>\n",
              "type": "!string"
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 218,
          "description": "<p>Action bound to each documentation item in the index panel. Clicking any\nitem will trigger this with the documentation item as an argument. Use\nthe passed doc item to internally call\n{{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToItem'}}\nto scroll to clicked item.</p>\n",
          "itemtype": "method",
          "name": "goToItem",
          "action": "",
          "params": [
            {
              "name": "classitem",
              "description": "<p>Backing classitem</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "itemtype",
                  "description": "Type for item of: `method`/`property`/`event`",
                  "type": "String"
                },
                {
                  "name": "name",
                  "description": "Name for classitem",
                  "type": "String"
                }
              ]
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 202,
          "description": "<p>Check for a passed <code>item</code> query param. When it exists call\n{{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToQueryParamItem'}}\nto scroll to that cross linked item.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 233,
          "description": "<p>Closure action passed into the tab component. This action is called\nwhenever a tab is clicked with the id of the tab. Use this to update the\ncontrolling <code>activeTab</code> property for the tabs DDAU style.</p>\n",
          "itemtype": "method",
          "name": "tabsChanged",
          "action": "",
          "params": [
            {
              "name": "tab",
              "description": "<p>Backing object for a given tab</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "elementId",
                  "description": "The id of the tab, controls current tab displayed",
                  "type": "String"
                }
              ]
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 79,
          "description": "<p>The currently active tab. This is controlled by this component to allow\nus to change the tab whenever a documentation item is clicked in the index\npanel.</p>\n",
          "itemtype": "property",
          "name": "activeTab",
          "type": "{string}",
          "access": "protected",
          "tagname": "",
          "default": "indexPanel",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 89,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-tabs-container']",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 24,
          "description": "<p>Array of <em>ALL</em> items for this class. Used to find the type when an item is\nspecified in a query param.</p>\n",
          "itemtype": "property",
          "name": "classitems",
          "type": "{Array}",
          "default": "[]",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 95,
          "description": "<p>The panel that that the tabs should render on creation. The tabs component\ntracks this separately and it needs to be updated separately when a class\npage is loaded with an item query parameter.</p>\n",
          "itemtype": "property",
          "name": "defaultTab",
          "type": "{string}",
          "default": "'indexPanel'",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 32,
          "description": "<p>This class' array of event documentation items.</p>\n",
          "itemtype": "property",
          "name": "event",
          "type": "{Array}",
          "default": "[]",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 40,
          "description": "<p>Item query param passed down from controller. When this property is present,\nor changes handle scrolling to the item. When the specified doc class is\nthe same but the item query param is different the model hooks will not be\ncalled, so we need to handle scrolling to the item when it changes.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{?string}",
          "default": "null",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 51,
          "description": "<p>This class' array of method documentation items.</p>\n",
          "itemtype": "property",
          "name": "method",
          "type": "{Array}",
          "default": "[]",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 59,
          "description": "<p>Name of the class. Is checked in <code>didUpdateAttrs</code> to know if the tabs\nshould be reset to the index panel</p>\n",
          "itemtype": "property",
          "name": "name",
          "type": "{string}",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        },
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 67,
          "description": "<p>This class' array of property documentation items.</p>\n",
          "itemtype": "property",
          "name": "property",
          "type": "{Array}",
          "default": "[]",
          "passed": "",
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/fountainhead-class/items-container.js",
          "line": 176,
          "description": "<p>Handle resetting tabs container to the index panel any time that this\ncomponent's attrs update. The only props passed in to this component are\nthe class items for the container, so we know if they change in any way\nthat this is the right time to update the tabs panel.</p>\n<p>NOTE: GUESS WHAT! This hook doens't only get called when passed props\nchange! There is some crazy behavior where this hook will get called ONCE\nand only ONCE when an internal property changes after the props for this\ncomponent has changed. Super weird. For now we're 'fixing' it by also\npassing in the class name and using that as a check to reset the <code>activeTab</code></p>\n",
          "itemtype": "event",
          "name": "didUpdateAttrs",
          "params": [
            {
              "name": "attrs",
              "description": "<p>Object with <code>oldAttrs</code> and <code>newAttrs</code></p>\n",
              "type": "Object"
            }
          ],
          "class": "FountainHeadClass.ItemsContainer",
          "srcFileId": "addon_components_fountainhead-class_items-container.js"
        }
      ],
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    "FountainHead.Class.Meta": {
      "name": "FountainHead.Class.Meta",
      "shortname": "FountainHead.Class.Meta",
      "classitems": [
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 17,
          "description": "<p>The access property is set by using either of the tags:</p>\n<ul>\n<li><code>@private</code></li>\n<li><code>@public</code></li>\n</ul>\n<p>The value for access matches the tag used</p>\n",
          "itemtype": "property",
          "name": "access",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 89,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array.<string>}",
          "default": "['fh-class-meta']",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 28,
          "description": "<p>The value property is set by using the <code>@extends</code> tag. Any class used in\nan extends tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "extends",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 36,
          "description": "<p>The file property matches where the documentation for a class is declared\nin the source files. It is set automatically.</p>\n",
          "itemtype": "property",
          "name": "file",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 52,
          "description": "<p>The line property matches the line where documentation for a class is\ndeclared in the source files. It is set automatically.</p>\n",
          "itemtype": "property",
          "name": "line",
          "type": "{?number}",
          "default": "null",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 44,
          "description": "<p>The module property is set by using the <code>@module</code> tag. Any module used in\na module tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "module",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 60,
          "description": "<p>scrFile id is set by the data scripts. It is a snake case version of the\nfile path and should be used for calling for the file</p>\n",
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "srcFileId",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 69,
          "description": "<p>The submodule property is set by using the <code>@submodule</code> tag. Any submodule\nused in a submodule tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "submodule",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 95,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'div'",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 77,
          "description": "<p>The uses array is set by using one or more <code>@uses</code> tags. Any class used in\na uses tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "uses",
          "type": "{Array}",
          "default": "[]",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 4,
      "description": "<p>Creates meta information for a documentation class.</p>\n<p>TODO: Document which YUIDoc tags generate what meta data</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 17,
          "description": "<p>The access property is set by using either of the tags:</p>\n<ul>\n<li><code>@private</code></li>\n<li><code>@public</code></li>\n</ul>\n<p>The value for access matches the tag used</p>\n",
          "itemtype": "property",
          "name": "access",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 89,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array.<string>}",
          "default": "['fh-class-meta']",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 28,
          "description": "<p>The value property is set by using the <code>@extends</code> tag. Any class used in\nan extends tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "extends",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 36,
          "description": "<p>The file property matches where the documentation for a class is declared\nin the source files. It is set automatically.</p>\n",
          "itemtype": "property",
          "name": "file",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 52,
          "description": "<p>The line property matches the line where documentation for a class is\ndeclared in the source files. It is set automatically.</p>\n",
          "itemtype": "property",
          "name": "line",
          "type": "{?number}",
          "default": "null",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 44,
          "description": "<p>The module property is set by using the <code>@module</code> tag. Any module used in\na module tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "module",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 60,
          "description": "<p>scrFile id is set by the data scripts. It is a snake case version of the\nfile path and should be used for calling for the file</p>\n",
          "access": "private",
          "tagname": "",
          "itemtype": "property",
          "name": "srcFileId",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 69,
          "description": "<p>The submodule property is set by using the <code>@submodule</code> tag. Any submodule\nused in a submodule tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "submodule",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 95,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'div'",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        },
        {
          "file": "addon/components/fountainhead-class/meta.js",
          "line": 77,
          "description": "<p>The uses array is set by using one or more <code>@uses</code> tags. Any class used in\na uses tag will be linked to.</p>\n",
          "itemtype": "property",
          "name": "uses",
          "type": "{Array}",
          "default": "[]",
          "class": "FountainHead.Class.Meta",
          "srcFileId": "addon_components_fountainhead-class_meta.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    "FountainHeadPages.Class": {
      "name": "FountainHeadPages.Class",
      "shortname": "FountainHeadPages.Class",
      "classitems": [
        {
          "file": "addon/components/fountainhead-pages/class.js",
          "line": 15,
          "description": "<p>Class model content.</p>\n",
          "itemtype": "property",
          "name": "class",
          "type": "{?Object}",
          "passed": "",
          "class": "FountainHeadPages.Class",
          "srcFileId": "addon_components_fountainhead-pages_class.js"
        },
        {
          "file": "addon/components/fountainhead-pages/class.js",
          "line": 22,
          "description": "<p>Item query param passed down from controller. Passed to the\n{{cross-link class='FountainheadClass.ItemsContainer' text='FountainheadClass.ItemsContainer'}}\ncomponent to scroll to linked item after load.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{?string}",
          "default": "null",
          "passed": "",
          "class": "FountainHeadPages.Class",
          "srcFileId": "addon_components_fountainhead-pages_class.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-pages/class.js",
      "line": 4,
      "description": "<p>Fountainhead <code>/doc/class</code> page component</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-pages/class.js",
          "line": 15,
          "description": "<p>Class model content.</p>\n",
          "itemtype": "property",
          "name": "class",
          "type": "{?Object}",
          "passed": "",
          "class": "FountainHeadPages.Class",
          "srcFileId": "addon_components_fountainhead-pages_class.js"
        },
        {
          "file": "addon/components/fountainhead-pages/class.js",
          "line": 22,
          "description": "<p>Item query param passed down from controller. Passed to the\n{{cross-link class='FountainheadClass.ItemsContainer' text='FountainheadClass.ItemsContainer'}}\ncomponent to scroll to linked item after load.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{?string}",
          "default": "null",
          "passed": "",
          "class": "FountainHeadPages.Class",
          "srcFileId": "addon_components_fountainhead-pages_class.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-pages_class.js"
    },
    "FountainHead.Docs": {
      "name": "FountainHead.Docs",
      "shortname": "FountainHead.Docs",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-pages/docs.js",
      "line": 5,
      "description": "<p>Fountainhead <code>/doc</code> page component serves as the wrapping template for all of\nFountainhead. The <code>outlet</code> for the route is yielded by this component, which\nis how we use components to handle rendering all of our markup, even with\nsubroutes.</p>\n<p>Because we want the default setup of Fountainhead to look like it's own app\nwe render everything in a <code>fh-page-in-page-wrapper</code> wrapper which is position\nfixed to cover the entire screen. This allows us to have our own header and\nfooter even if a consuming application has one in their <code>application.hbs</code>\ntemplate.</p>\n<p>The <code>fountainhead</code> service is the primary store for the addon and handles\nfetching the meta data for the docs.</p>\n",
      "uses": [
        "FountainHead.Docs.Github",
        "FountainHead.Docs.Sidebar"
      ],
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "addon_components_fountainhead-pages_docs.js"
    },
    "FountainHead.File": {
      "name": "FountainHead.File",
      "shortname": "FountainHead.File",
      "classitems": [
        {
          "file": "addon/components/fountainhead-pages/file.js",
          "line": 12,
          "description": "<p>JSON stringified file generated by documentation script.</p>\n",
          "itemtype": "property",
          "name": "file",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.File",
          "srcFileId": "addon_components_fountainhead-pages_file.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-pages/file.js",
      "line": 4,
      "description": "<p>Fountainhead <code>/doc/file</code> page component</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-pages/file.js",
          "line": 12,
          "description": "<p>JSON stringified file generated by documentation script.</p>\n",
          "itemtype": "property",
          "name": "file",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.File",
          "srcFileId": "addon_components_fountainhead-pages_file.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-pages_file.js"
    },
    "FountainHead.Module": {
      "name": "FountainHead.Module",
      "shortname": "FountainHead.Module",
      "classitems": [
        {
          "file": "addon/components/fountainhead-pages/module.js",
          "line": 24,
          "description": "<p>Handle nulling out properties <code>submodules</code> and <code>classes</code> if they don't have\nany keys.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "class": "FountainHead.Module",
          "srcFileId": "addon_components_fountainhead-pages_module.js"
        },
        {
          "file": "addon/components/fountainhead-pages/module.js",
          "line": 13,
          "description": "<p>Module model content</p>\n",
          "itemtype": "property",
          "name": "module",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Module",
          "srcFileId": "addon_components_fountainhead-pages_module.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-pages/module.js",
      "line": 4,
      "description": "<p>Fountainhead <code>/doc/module</code> page component\nThere's nothing here yet.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-pages/module.js",
          "line": 13,
          "description": "<p>Module model content</p>\n",
          "itemtype": "property",
          "name": "module",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Module",
          "srcFileId": "addon_components_fountainhead-pages_module.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/fountainhead-pages/module.js",
          "line": 24,
          "description": "<p>Handle nulling out properties <code>submodules</code> and <code>classes</code> if they don't have\nany keys.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "class": "FountainHead.Module",
          "srcFileId": "addon_components_fountainhead-pages_module.js"
        }
      ],
      "srcFileId": "addon_components_fountainhead-pages_module.js"
    },
    "FountainHead.Docs.Sidebar": {
      "name": "FountainHead.Docs.Sidebar",
      "shortname": "FountainHead.Docs.Sidebar",
      "classitems": [
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 30,
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "default": "['stringForAriaHidden:aria-hidden']",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 36,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-sidebar']",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 71,
          "description": "<p>Method to filter on doc elements for search.</p>\n",
          "itemtype": "method",
          "name": "doFilter",
          "params": [
            {
              "name": "query",
              "description": "<p>The search query to filter on</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 18,
          "description": "<p>Fountainhead meta passed from service. Used to calculate <code>stringForAriaHidden</code>\nto hide sidebar when there is no data.</p>\n",
          "itemtype": "property",
          "name": "meta",
          "type": "{?Object}",
          "default": "null",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 52,
          "description": "<p>Fountainhead meta is passed into the sidebar. When there is no data, then\nwe haven't run the documentation scripts yet, so we need to hide the sidebar\nusing aria-hidden. Convert presence of meta data to string of boolean that\ncan be used for aria-hidden</p>\n",
          "itemtype": "property",
          "name": "stringForAriaHidden",
          "type": "{string}",
          "return": {
            "description": "Returns either string of `true` or `false` dependent on\n                 presence of meta",
            "type": "String"
          },
          "class": "FountainHead.Docs.Sidebar",
          "subprops": [
            {
              "name": "meta",
              "description": "Fountainhead meta passed from service",
              "type": "Object"
            }
          ],
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 42,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'nav'",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "FountainHead.Docs"
      ],
      "module": "Addon",
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 5,
      "description": "<p>Wrapper component for the sidebar components. Expects the entire docs meta\nobject.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 71,
          "description": "<p>Method to filter on doc elements for search.</p>\n",
          "itemtype": "method",
          "name": "doFilter",
          "params": [
            {
              "name": "query",
              "description": "<p>The search query to filter on</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 30,
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "default": "['stringForAriaHidden:aria-hidden']",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 36,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-sidebar']",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 18,
          "description": "<p>Fountainhead meta passed from service. Used to calculate <code>stringForAriaHidden</code>\nto hide sidebar when there is no data.</p>\n",
          "itemtype": "property",
          "name": "meta",
          "type": "{?Object}",
          "default": "null",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 52,
          "description": "<p>Fountainhead meta is passed into the sidebar. When there is no data, then\nwe haven't run the documentation scripts yet, so we need to hide the sidebar\nusing aria-hidden. Convert presence of meta data to string of boolean that\ncan be used for aria-hidden</p>\n",
          "itemtype": "property",
          "name": "stringForAriaHidden",
          "type": "{string}",
          "return": {
            "description": "Returns either string of `true` or `false` dependent on\n                 presence of meta",
            "type": "String"
          },
          "class": "FountainHead.Docs.Sidebar",
          "subprops": [
            {
              "name": "meta",
              "description": "Fountainhead meta passed from service",
              "type": "Object"
            }
          ],
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        },
        {
          "file": "addon/components/fountainhead-sidebar/sidebar.js",
          "line": 42,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'nav'",
          "class": "FountainHead.Docs.Sidebar",
          "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    "CrossLink": {
      "name": "CrossLink",
      "shortname": "CrossLink",
      "classitems": [
        {
          "file": "addon/components/cross-link.js",
          "line": 43,
          "description": "<p>Documentation Class to crosslink to.</p>\n",
          "itemtype": "property",
          "name": "class",
          "type": "{string}",
          "required": 1,
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 94,
          "description": "<p>Validate passed properties during init and warn if they're invalid. This\nprevents the component from creating an invalid <code>link-to</code>.</p>\n<p>Checks for a passed\n{{cross-link class='Crosslink' item='text'}} and sets default\ntext if unspecified</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 51,
          "description": "<p>Class item to cross link to.\nas well.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{string}",
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 59,
          "description": "<p>Documentation module to crosslink to.</p>\n",
          "itemtype": "property",
          "name": "module",
          "type": "{string}",
          "required": 1,
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 84,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "''",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 67,
          "description": "<p>Anchor text for generated <code>link-to</code>. You can pass specific text if needed,\notherwise default text is generated:</p>\n<h4>Defaults:</h4>\n<ul>\n<li>if module: <em>MODULE_NAME Module</em></li>\n<li>if class: <em>CLASS_NAME Class</em></li>\n<li>if class &amp;&amp; item: <em>CLASS_NAME:ITEM_NAME Class</em></li>\n</ul>\n",
          "itemtype": "property",
          "name": "text",
          "type": "{string}",
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/cross-link.js",
      "line": 4,
      "description": "<p>Use a <code>cross-link</code> component to handle cross referencing another documentation\nitem in your application. Internally the component handles creating a <code>link-to</code>\nusing the passed properties.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>text</code></td>\n<td>Inner HTML for link</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Documentation class to link to</td>\n</tr>\n<tr>\n<td><code>module</code></td>\n<td>Documentation module to link to</td>\n</tr>\n<tr>\n<td><code>item</code></td>\n<td>Specific documentation item to link to, appended as a query param</td>\n</tr>\n</tbody>\n</table>\n<h4>Examples:</h4>\n<p>Generate a link to module 'YourModule'</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>cross<span class=\"token operator\">-</span>link module<span class=\"token operator\">=</span><span class=\"token string\">'YourModule'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Generate a link to class 'YourClass'</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>cross<span class=\"token operator\">-</span>link <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">'YourClass'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Generate a link to 'someMethod' on 'YourClass'</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>cross<span class=\"token operator\">-</span>link <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">'YourClass'</span> item<span class=\"token operator\">=</span><span class=\"token string\">'someMethod'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><em>NOTE</em> Component requires either a <code>class</code> or <code>module</code> passed in.\nAn <code>item</code> may be passed to link to a specific class item.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/cross-link.js",
          "line": 94,
          "description": "<p>Validate passed properties during init and warn if they're invalid. This\nprevents the component from creating an invalid <code>link-to</code>.</p>\n<p>Checks for a passed\n{{cross-link class='Crosslink' item='text'}} and sets default\ntext if unspecified</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/cross-link.js",
          "line": 43,
          "description": "<p>Documentation Class to crosslink to.</p>\n",
          "itemtype": "property",
          "name": "class",
          "type": "{string}",
          "required": 1,
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 51,
          "description": "<p>Class item to cross link to.\nas well.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{string}",
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 59,
          "description": "<p>Documentation module to crosslink to.</p>\n",
          "itemtype": "property",
          "name": "module",
          "type": "{string}",
          "required": 1,
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 84,
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "''",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        },
        {
          "file": "addon/components/cross-link.js",
          "line": 67,
          "description": "<p>Anchor text for generated <code>link-to</code>. You can pass specific text if needed,\notherwise default text is generated:</p>\n<h4>Defaults:</h4>\n<ul>\n<li>if module: <em>MODULE_NAME Module</em></li>\n<li>if class: <em>CLASS_NAME Class</em></li>\n<li>if class &amp;&amp; item: <em>CLASS_NAME:ITEM_NAME Class</em></li>\n</ul>\n",
          "itemtype": "property",
          "name": "text",
          "type": "{string}",
          "passed": "",
          "class": "CrossLink",
          "srcFileId": "addon_components_cross-link.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_cross-link.js"
    },
    "FountainHead.Shared.Alert": {
      "name": "FountainHead.Shared.Alert",
      "shortname": "FountainHead.Shared.Alert",
      "classitems": [
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 108,
          "description": "<p>Allows for quick and easy dismissal of the alert. The alert is faded from\nview, then totally removed from the DOM and the component instance is\ndestroyed.</p>\n",
          "itemtype": "method",
          "name": "_selfDestruct",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 127,
          "description": "<p>Actions hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 76,
          "description": "<p>Attribute bindings applied to the component.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 15,
          "description": "<p>Specify brand, component handles assigning correct css class</p>\n",
          "itemtype": "property",
          "name": "brand",
          "default": "''",
          "type": "{string}",
          "access": "public",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 54,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 23,
          "description": "<p>Whether this alert can be dismissed via the close button in the upper right\ncorner. Defaults to true. Adds an interactive close button to the alert.</p>\n<p><strong>Usage:</strong>\nOverride by passing <code>false</code> into this param in your handlebars template:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#core<span class=\"token operator\">-</span>alert canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Standard template content goes here <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>core<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
          "itemtype": "property",
          "name": "canDismiss",
          "type": "{boolean}",
          "default": "true",
          "access": "public",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 93,
          "description": "<p>A set of dynamic classes whose output is bound to the associated values\non the component.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 85,
          "description": "<p>Static class names applied to the component that must always exist. This\nreally should not need to be overridden or extended.</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 133,
          "description": "<p>A proxy action for the selfDestruct method</p>\n",
          "itemtype": "method",
          "name": "dismiss",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 42,
          "description": "<p>Contains optional action that is executed when the alert is dismissed.\nThis action will be executed before the alert is destroyed.</p>\n",
          "itemtype": "property",
          "name": "onDismiss",
          "type": "{function}",
          "default": "() => {}",
          "access": "public",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 65,
          "description": "<p>A++ accessibility. Tells a screen this component is an alert.</p>\n",
          "itemtype": "property",
          "name": "role",
          "type": "{string}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-alert.js",
      "line": 5,
      "description": "<p>Fountainhead Alert Component copied from Radical</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 108,
          "description": "<p>Allows for quick and easy dismissal of the alert. The alert is faded from\nview, then totally removed from the DOM and the component instance is\ndestroyed.</p>\n",
          "itemtype": "method",
          "name": "_selfDestruct",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 133,
          "description": "<p>A proxy action for the selfDestruct method</p>\n",
          "itemtype": "method",
          "name": "dismiss",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 127,
          "description": "<p>Actions hash</p>\n",
          "itemtype": "property",
          "name": "actions",
          "type": "{Object}",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 76,
          "description": "<p>Attribute bindings applied to the component.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 15,
          "description": "<p>Specify brand, component handles assigning correct css class</p>\n",
          "itemtype": "property",
          "name": "brand",
          "default": "''",
          "type": "{string}",
          "access": "public",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 54,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 23,
          "description": "<p>Whether this alert can be dismissed via the close button in the upper right\ncorner. Defaults to true. Adds an interactive close button to the alert.</p>\n<p><strong>Usage:</strong>\nOverride by passing <code>false</code> into this param in your handlebars template:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#core<span class=\"token operator\">-</span>alert canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Standard template content goes here <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>core<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
          "itemtype": "property",
          "name": "canDismiss",
          "type": "{boolean}",
          "default": "true",
          "access": "public",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 93,
          "description": "<p>A set of dynamic classes whose output is bound to the associated values\non the component.</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 85,
          "description": "<p>Static class names applied to the component that must always exist. This\nreally should not need to be overridden or extended.</p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 42,
          "description": "<p>Contains optional action that is executed when the alert is dismissed.\nThis action will be executed before the alert is destroyed.</p>\n",
          "itemtype": "property",
          "name": "onDismiss",
          "type": "{function}",
          "default": "() => {}",
          "access": "public",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        },
        {
          "file": "addon/components/fountainhead-alert.js",
          "line": 65,
          "description": "<p>A++ accessibility. Tells a screen this component is an alert.</p>\n",
          "itemtype": "property",
          "name": "role",
          "type": "{string}",
          "access": "private",
          "tagname": "",
          "class": "FountainHead.Shared.Alert",
          "srcFileId": "addon_components_fountainhead-alert.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    "FountainHead.Shared.Button": {
      "name": "FountainHead.Shared.Button",
      "shortname": "FountainHead.Shared.Button",
      "classitems": [
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 51,
          "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 18,
          "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 37,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "class": "FountainHead.Shared.Button",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 78,
          "description": "<p>Handle binding brand and link related css class names</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 69,
          "description": "<p>Bind standard core classname for component: <code>core-button</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 25,
          "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
          "itemtype": "property",
          "name": "link",
          "type": "{Boolean}",
          "default": "false",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 105,
          "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
          "itemtype": "event",
          "name": "mouseDown",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 87,
          "description": "<p>Button DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'button'",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 94,
          "description": "<p>Include type button for usability.</p>\n",
          "itemtype": "property",
          "name": "type",
          "type": "{string}",
          "default": "'button'",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-button.js",
      "line": 5,
      "description": "<p>Fountainhead button component pulled from <code>ember-radical</code> addon.\nTODO: One day use nested addons, <em>trepidation</em></p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 51,
          "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 18,
          "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
          "itemtype": "property",
          "name": "brand",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 37,
          "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
          "itemtype": "property",
          "name": "brandClass",
          "type": "{string}",
          "class": "FountainHead.Shared.Button",
          "subprops": [
            {
              "name": "'brand'",
              "description": ""
            }
          ],
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 78,
          "description": "<p>Handle binding brand and link related css class names</p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 69,
          "description": "<p>Bind standard core classname for component: <code>core-button</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 25,
          "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
          "itemtype": "property",
          "name": "link",
          "type": "{Boolean}",
          "default": "false",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 87,
          "description": "<p>Button DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "default": "'button'",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        },
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 94,
          "description": "<p>Include type button for usability.</p>\n",
          "itemtype": "property",
          "name": "type",
          "type": "{string}",
          "default": "'button'",
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/fountainhead-button.js",
          "line": 105,
          "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
          "itemtype": "event",
          "name": "mouseDown",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainHead.Shared.Button",
          "srcFileId": "addon_components_fountainhead-button.js"
        }
      ],
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    "FountainHead.Header": {
      "name": "FountainHead.Header",
      "shortname": "FountainHead.Header",
      "classitems": [
        {
          "file": "addon/components/fountainhead-welcome.js",
          "line": 15,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-welcome']",
          "class": "FountainHead.Header",
          "srcFileId": "addon_components_fountainhead-welcome.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-welcome.js",
      "line": 4,
      "description": "<p>The landing message is rendered on the <code>/docs/index</code> route and shows either a\nhelpful getting started or docs related message depending on if the user has\ngenerated docs or not. We know by passing in the meta information in the\n<code>/docs/index</code> template</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-welcome.js",
          "line": 15,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-welcome']",
          "class": "FountainHead.Header",
          "srcFileId": "addon_components_fountainhead-welcome.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-welcome.js"
    },
    "FountainHead.Docs.Github": {
      "name": "FountainHead.Docs.Github",
      "shortname": "FountainHead.Docs.Github",
      "classitems": [
        {
          "file": "addon/components/fountainhead-repo-link.js",
          "line": 14,
          "description": "<p>Repository URL from fountainhead configurations. If a URL has been specified\nin the configs or the <code>package.json</code> this github logo will show with a link\nto the repo</p>\n",
          "itemtype": "property",
          "name": "repository",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Docs.Github",
          "srcFileId": "addon_components_fountainhead-repo-link.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "FountainHead.Docs"
      ],
      "module": "Addon",
      "file": "addon/components/fountainhead-repo-link.js",
      "line": 4,
      "description": "<p>Github octocat logo in the top right corner.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-repo-link.js",
          "line": 14,
          "description": "<p>Repository URL from fountainhead configurations. If a URL has been specified\nin the configs or the <code>package.json</code> this github logo will show with a link\nto the repo</p>\n",
          "itemtype": "property",
          "name": "repository",
          "type": "{string}",
          "default": "''",
          "class": "FountainHead.Docs.Github",
          "srcFileId": "addon_components_fountainhead-repo-link.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-repo-link.js"
    },
    "Fountainhead.RuntimeDescription": {
      "name": "Fountainhead.RuntimeDescription",
      "shortname": "Fountainhead.RuntimeDescription",
      "classitems": [
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 66,
          "description": "<p>Looks through the passed-in template string and checks for action helpers;\nwhen it finds some, it checks for the actions referenced and registers no-ops\nfor them on this component's context so that the application doesn't explode\nwhen trying to reference a non-existent action.</p>\n",
          "itemtype": "method",
          "name": "_checkActionRefs",
          "params": [
            {
              "name": "templateString",
              "description": "<p>The template string to run the check for action matches on</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 100,
          "description": "<p>Grabs the input from the parent instance's code editor, compiles it into a\nreal-live HTMLBars template, registers it on the container as a partial\nand makes it available as output for the preview component's template to\nrender.</p>\n<p>New partials are created for every change, using a date string as the\npartial name to avoid collisions.</p>\n<p>TODO: Use lookup partial names that can be mapped and retrieved instead of\nmaking new ones each time</p>\n",
          "itemtype": "method",
          "name": "_generateDescription",
          "params": [
            {
              "name": "templateString",
              "description": "<p>String to generate template from</p>\n",
              "type": "String"
            }
          ],
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 41,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-description']",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 47,
          "description": "<p>If there is a parsing error during the template compilation the catch block\nwill set it as the <code>compilerError</code>. This parsing error is rendered for\neasier debugging of invalid content.</p>\n",
          "itemtype": "property",
          "name": "compilerError",
          "type": "{?string}",
          "default": "null",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 21,
          "description": "<p>The content string that should be rendered. This string is passed to the\nruntime compiler and registered as a partial if compilation is successful.</p>\n",
          "itemtype": "property",
          "name": "content",
          "type": "{string}",
          "default": "''",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 29,
          "description": "<p>The string that should be converted to a partial</p>\n",
          "itemtype": "property",
          "name": "description",
          "type": "{string}",
          "default": "''",
          "deprecated": true,
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 160,
          "description": "<p>Whenever attrs are received fire the <code>_generateDescription</code> method to\ngenerate a partial that will be rendered.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "params": [
            {
              "name": "attrs",
              "description": "<p>Ember attrs object</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "newAttrs",
                  "description": "The new attrs received",
                  "type": "Object"
                }
              ]
            }
          ],
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 136,
          "description": "<p>On init we map the passed <code>contextActions</code> to real actions in this\ncomponent's actions hash to ensure they're available at compile time.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 56,
          "description": "<p>Name of generated partial that is used in the template.</p>\n",
          "itemtype": "property",
          "name": "partialName",
          "type": "{string}",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 6,
      "description": "<p>Generates a description during runtime by using HTMLBars to compile any\nstring to a partial. This allows us to create descriptions from JSON\nresponses with components inside of them.</p>\n<p>TODO: Name partials by class+type+name for re-use</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 66,
          "description": "<p>Looks through the passed-in template string and checks for action helpers;\nwhen it finds some, it checks for the actions referenced and registers no-ops\nfor them on this component's context so that the application doesn't explode\nwhen trying to reference a non-existent action.</p>\n",
          "itemtype": "method",
          "name": "_checkActionRefs",
          "params": [
            {
              "name": "templateString",
              "description": "<p>The template string to run the check for action matches on</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 100,
          "description": "<p>Grabs the input from the parent instance's code editor, compiles it into a\nreal-live HTMLBars template, registers it on the container as a partial\nand makes it available as output for the preview component's template to\nrender.</p>\n<p>New partials are created for every change, using a date string as the\npartial name to avoid collisions.</p>\n<p>TODO: Use lookup partial names that can be mapped and retrieved instead of\nmaking new ones each time</p>\n",
          "itemtype": "method",
          "name": "_generateDescription",
          "params": [
            {
              "name": "templateString",
              "description": "<p>String to generate template from</p>\n",
              "type": "String"
            }
          ],
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 136,
          "description": "<p>On init we map the passed <code>contextActions</code> to real actions in this\ncomponent's actions hash to ensure they're available at compile time.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 41,
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "default": "['fh-description']",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 47,
          "description": "<p>If there is a parsing error during the template compilation the catch block\nwill set it as the <code>compilerError</code>. This parsing error is rendered for\neasier debugging of invalid content.</p>\n",
          "itemtype": "property",
          "name": "compilerError",
          "type": "{?string}",
          "default": "null",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 21,
          "description": "<p>The content string that should be rendered. This string is passed to the\nruntime compiler and registered as a partial if compilation is successful.</p>\n",
          "itemtype": "property",
          "name": "content",
          "type": "{string}",
          "default": "''",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 29,
          "description": "<p>The string that should be converted to a partial</p>\n",
          "itemtype": "property",
          "name": "description",
          "type": "{string}",
          "default": "''",
          "deprecated": true,
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        },
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 56,
          "description": "<p>Name of generated partial that is used in the template.</p>\n",
          "itemtype": "property",
          "name": "partialName",
          "type": "{string}",
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/fountainhead-runtime-description.js",
          "line": 160,
          "description": "<p>Whenever attrs are received fire the <code>_generateDescription</code> method to\ngenerate a partial that will be rendered.</p>\n",
          "itemtype": "event",
          "name": "didReceiveAttrs",
          "params": [
            {
              "name": "attrs",
              "description": "<p>Ember attrs object</p>\n",
              "type": "Object",
              "props": [
                {
                  "name": "newAttrs",
                  "description": "The new attrs received",
                  "type": "Object"
                }
              ]
            }
          ],
          "class": "Fountainhead.RuntimeDescription",
          "srcFileId": "addon_components_fountainhead-runtime-description.js"
        }
      ],
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    "FountainHead.Shared.CoreSVG": {
      "name": "FountainHead.Shared.CoreSVG",
      "shortname": "FountainHead.Shared.CoreSVG",
      "classitems": [
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 30,
          "description": "<p>Allow direct binding of <code>data-test</code> attributes so that icons can be\ndirectly targeted in automated testing.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 44,
          "description": "<p>Bound classNames: <code>svgId</code></p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 38,
          "description": "<p>Class names: <code>core-svg</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 13,
          "description": "<p>File path to svg definitions file</p>\n",
          "itemtype": "property",
          "name": "filePath",
          "type": "{string}",
          "default": "assets/svg-defs.svg",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 20,
          "description": "<p>The id of the svg.</p>\n",
          "itemtype": "property",
          "name": "svgId",
          "type": "{string}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 50,
          "description": "<p>SVG DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-svg.js",
      "line": 4,
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 30,
          "description": "<p>Allow direct binding of <code>data-test</code> attributes so that icons can be\ndirectly targeted in automated testing.</p>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 44,
          "description": "<p>Bound classNames: <code>svgId</code></p>\n",
          "itemtype": "property",
          "name": "classNameBindings",
          "type": "{Array}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 38,
          "description": "<p>Class names: <code>core-svg</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 13,
          "description": "<p>File path to svg definitions file</p>\n",
          "itemtype": "property",
          "name": "filePath",
          "type": "{string}",
          "default": "assets/svg-defs.svg",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 20,
          "description": "<p>The id of the svg.</p>\n",
          "itemtype": "property",
          "name": "svgId",
          "type": "{string}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        },
        {
          "file": "addon/components/fountainhead-svg.js",
          "line": 50,
          "description": "<p>SVG DOM element</p>\n",
          "itemtype": "property",
          "name": "tagName",
          "type": "{string}",
          "class": "FountainHead.Shared.CoreSVG",
          "srcFileId": "addon_components_fountainhead-svg.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    "CoreTabs.Content": {
      "name": "CoreTabs.Content",
      "shortname": "CoreTabs.Content",
      "classitems": [
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 80,
          "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
          "itemtype": "property",
          "name": "_hidden",
          "return": {
            "description": "String of true/false for use with `aria-hidden` binding",
            "type": "String"
          },
          "class": "CoreTabs.Content",
          "subprops": [
            {
              "name": "activeId",
              "description": "",
              "type": "String"
            },
            {
              "name": "hidden",
              "description": "",
              "type": "Boolean"
            }
          ],
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 36,
          "description": "<p>The id of the currently active tab in the scope of the core-tabs component.\nThis is provided privately in the <code>core-tabs</code> yield hash.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 59,
          "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "default": "tabpanel",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 66,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 74,
          "description": "<p>Class names: <code>tabs-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 136,
          "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
          "itemtype": "event",
          "name": "didUpdateAttrs",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 44,
          "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 118,
          "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
          "itemtype": "event",
          "name": "init",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 96,
          "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>core-tabs</code> component.</p>\n",
          "itemtype": "property",
          "name": "label",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 105,
          "description": "<p>Use this attribute to place a custom data-test attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
          "itemtype": "property",
          "name": "tabDataTest",
          "type": "{string}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 5,
      "description": "<p>This component is yielded by the <code>core-tabs</code> component. The <code>activeId</code> and\nactions <code>registerTab</code> and <code>updateTab</code> are privately bound for internal use.</p>\n<p>On init each tab will register itself with the <code>core-tabs</code> wrapping container,\npassing all its data. The <code>core-tabs</code> container uses this to build out the\ntab buttons.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#core<span class=\"token operator\">-</span>tabs defaultTab<span class=\"token operator\">=</span><span class=\"token string\">\"dumpsterShrimp\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Shrimp\"</span> elementId<span class=\"token operator\">=</span><span class=\"token string\">\"dumpsterShrimp\"</span> tabDataTest<span class=\"token operator\">=</span><span class=\"token string\">\"a-nifty-tab-button\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    BRINGO<span class=\"token operator\">!</span> There<span class=\"token string\">'s some pretty good lil'</span> shrimpers <span class=\"token keyword\">in</span> here<span class=\"token punctuation\">,</span> lets check it out<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>core<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>label</code></td>\n<td>string</td>\n<td>null</td>\n<td>Text label of the tab button for this panel</td>\n</tr>\n<tr>\n<td><code>elementId</code></td>\n<td>string</td>\n<td>null</td>\n<td>Set a specific id for this component when using container <code>defaultTab</code></td>\n</tr>\n<tr>\n<td><code>tabDataTest</code></td>\n<td>string</td>\n<td>null</td>\n<td><code>data-test</code> for the tab button</td>\n</tr>\n</tbody>\n</table>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [],
      "property": [
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 80,
          "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
          "itemtype": "property",
          "name": "_hidden",
          "return": {
            "description": "String of true/false for use with `aria-hidden` binding",
            "type": "String"
          },
          "class": "CoreTabs.Content",
          "subprops": [
            {
              "name": "activeId",
              "description": "",
              "type": "String"
            },
            {
              "name": "hidden",
              "description": "",
              "type": "Boolean"
            }
          ],
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 36,
          "description": "<p>The id of the currently active tab in the scope of the core-tabs component.\nThis is provided privately in the <code>core-tabs</code> yield hash.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 59,
          "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
          "itemtype": "property",
          "name": "ariaRole",
          "type": "{string}",
          "default": "tabpanel",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 66,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 74,
          "description": "<p>Class names: <code>tabs-content</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 44,
          "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
          "itemtype": "property",
          "name": "hidden",
          "type": "{Boolean}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 96,
          "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>core-tabs</code> component.</p>\n",
          "itemtype": "property",
          "name": "label",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 105,
          "description": "<p>Use this attribute to place a custom data-test attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
          "itemtype": "property",
          "name": "tabDataTest",
          "type": "{string}",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 136,
          "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
          "itemtype": "event",
          "name": "didUpdateAttrs",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        },
        {
          "file": "addon/components/fountainhead-tabs-content.js",
          "line": 118,
          "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
          "itemtype": "event",
          "name": "init",
          "class": "CoreTabs.Content",
          "srcFileId": "addon_components_fountainhead-tabs-content.js"
        }
      ],
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    "CoreTabs": {
      "name": "CoreTabs",
      "shortname": "CoreTabs",
      "classitems": [
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 165,
          "description": "<p>Internal method that can be used with a <code>run.once</code> call to only add new tabs\nonce per run loop. Simply iterates through <code>_tabsToCreate</code> and pushes them\ninto the <code>tabList</code>. This is needed to prevent multiple renders in a single\nrun loop when all of the <code>content</code> subcomponents register themselves with\nthe container during init.</p>\n",
          "itemtype": "method",
          "name": "_createTabsList",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 85,
          "description": "<p>The elementId of the currently opened tab. This determines which tab is active and\nwhich tab's content to display. If this is empty, no tabs are open.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 140,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 93,
          "description": "<p>Pass false to use tab style without primary color tabs.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "default": "true",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 147,
          "description": "<p>Class names: <code>core-tabs</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 100,
          "description": "<p>The optional elementId of the tab that should be shown by default. This is\nuseful for cases where the user has come into a page and is expecting one\nof the tabs to be shown by default.</p>\n",
          "itemtype": "property",
          "name": "defaultTab",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 183,
          "description": "<p>When the component initializes, we set the <code>tabList</code> property to an array.\nThis prevents multiple instances of core-tabs on a given page from\ninheriting the same tabList array through prototype inheritance.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 109,
          "description": "<p>Optional closure action that will be called whenever a tab is opened with\nthe id of that tab. Use this to create a controlled tabs instance.</p>\n",
          "itemtype": "property",
          "name": "onChange",
          "type": "{function}",
          "default": "null",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 230,
          "description": "<p>Closure action passed to content subcomponents that is called on init.\nEach child tab will register itself with this container. To ensure the\ntabList is only updated once per render, we proxy new tabs to the\n<code>_tabsToCreate</code> array and then push all of them to <code>tabList</code> using a\n<code>run.once</code> call to <code>_createTabsList</code></p>\n",
          "itemtype": "method",
          "name": "registerTab",
          "params": [
            {
              "name": "tab",
              "description": "<p>Object model of tab to be registered</p>\n",
              "type": "Object"
            }
          ],
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 117,
          "description": "<p>Whether the page should scroll the tab context back to the top when one of\nthe tabs is clicked. This can be a nice convenience for usabilitee.</p>\n",
          "itemtype": "property",
          "name": "scrollOnClick",
          "type": "{Boolean}",
          "default": "false",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 125,
          "description": "<p>What the target of the <code>scrollOnClick</code> behavior should be. By default,\nthe entire page/body scrolls, however if this instance of <code>core-tabs</code> is\ncontained within a modal or some other scrollable sub-container, it may\nbe more desirable to execute a scroll against that instead of the entire\npage. Simply pass a standard jQuery-like selector in as a string.</p>\n",
          "itemtype": "property",
          "name": "scrollTarget",
          "type": "{string}",
          "default": "'body, html'",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 208,
          "description": "<p>Action to show a tab. Set <code>activeId</code> to the passed elementId. <code>activeId</code>\nis passed down to children content components</p>\n",
          "itemtype": "method",
          "name": "showTab",
          "params": [
            {
              "name": "elementId",
              "description": "<p>HTML id of the tab to show</p>\n",
              "type": "String"
            }
          ],
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 153,
          "description": "<p>List of tabs to display. This is iterated through in the template to\nrendered the buttons that are used to change tabs.</p>\n",
          "itemtype": "property",
          "name": "tabList",
          "type": "{Array.<Object>}",
          "default": "null",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 244,
          "description": "<p>Closure action passed to content subcomponents that is called whenever\na tab has updated in a way this container needs to know of. Currently\nthis is only when a tab's <code>hidden</code> status changes.</p>\n",
          "itemtype": "method",
          "name": "updateTab",
          "params": [
            {
              "name": "tab",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "elementId",
                  "description": "HTML id of tab to update",
                  "type": "String"
                },
                {
                  "name": "hidden",
                  "description": "Hidden status of changed tab",
                  "type": "Boolean"
                }
              ]
            }
          ],
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/components/fountainhead-tabs.js",
      "line": 8,
      "description": "<p>A++ Accessible tabs. The <code>core-tabs</code> component is the parent container for\na given set of tabs and handles managing the active state of the tabs and tab\npanels. The <code>core-tabs</code> component yields a <code>content</code> contextual component\ninside of the <code>components</code> hash.</p>\n<h4>Usage</h4>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#core<span class=\"token operator\">-</span>tabs <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Delgrango's\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    This is my favorite resaurant at the marinara<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">of</span> Delgrango's\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Fresh Water\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    Boy I sure did work up a thirst after eating all them shramps<span class=\"token punctuation\">.</span> Time to\n    wash it down <span class=\"token keyword\">with</span> a cool glass <span class=\"token keyword\">of</span> marina water<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>core<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>You can include any number of <code>components.content</code> contextual components.\n<em>(However keep in mind that adding too many <code>content</code> components may result in\nthe tab labels becoming unreadable depending on the space alotted for\ndisplaying them.)</em></p>\n<p>You can also specify a default tab by setting the <code>defaultTab</code> parameter to\nmatch one of content components' HTML id property:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#core<span class=\"token operator\">-</span>tabs defaultTab<span class=\"token operator\">=</span><span class=\"token string\">\"shrimpers\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Shrimp\"</span> elementId<span class=\"token operator\">=</span><span class=\"token string\">\"shrimpers\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    BRINGO<span class=\"token operator\">!</span> There<span class=\"token string\">'s some pretty good lil'</span> shrimpers <span class=\"token keyword\">in</span> here<span class=\"token punctuation\">,</span> lets check it out<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Delgrango's\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    This is my favorite resaurant at the marinara<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">of</span> Delgrango's\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>core<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<h3>Controlled Tabs</h3>\n<p>If you need to programatically open tabs within your application you can\ncreate a controlled instance of <code>core-tabs</code> by specifying the <code>activeId</code> for\nthe component. This means that you need to track the <code>activeId</code> in a parent\ncomponent or service and pass it down into the controlled tab instance. To do\nthis pass an <code>onChange</code> closure into the component. It will be called with\nthe <code>elementId</code> of the selected tab any time a user changes tabs.</p>\n<p>TODO: Template &amp;&amp; JS Examples</p>\n<p>Configuration | Type | Default | Description\n— | — | —\n<code>activeId</code> | string | null | The <code>elementId</code> of the tab that should be opened\n<code>buttonStyle</code> | boolean | true | Set to false for tab buttons without primary background-color\n<code>defaultTab</code> | string | null | Tab to render shown by default\n<code>onChange</code> | function | null | Optional closure that will be called when any tab is opened\n<code>scrollOnClick</code> | boolean | false | Set to true to scroll page to top on tab click\n<code>scrollTarget</code> | jQuery selector | 'body, html' | Specify scroll animation target</p>\n<h3>A++ Accessibility</h3>\n<ul>\n<li>Tabs have <code>aria-controls</code> set to the <code>elementId</code> of the <code>tabpanel</code> they show.</li>\n<li>Tabs have <code>role=tab</code> for role identification</li>\n<li>Tabs are instances of <code>core-button</code> for keyboard access</li>\n<li>Show/hide of tabs and panels are managed through <code>aria-hidden</code> attr</li>\n</ul>\n<h3>Feature Notes:</h3>\n<ul>\n<li>The tab list is a flexbox container with flex-grow 1 for each tab. This auto\nmagically grows the tabs to fill the entire width of tab container.</li>\n</ul>\n",
      "is_constructor": 1,
      "extends": "Ember.Component",
      "method": [
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 165,
          "description": "<p>Internal method that can be used with a <code>run.once</code> call to only add new tabs\nonce per run loop. Simply iterates through <code>_tabsToCreate</code> and pushes them\ninto the <code>tabList</code>. This is needed to prevent multiple renders in a single\nrun loop when all of the <code>content</code> subcomponents register themselves with\nthe container during init.</p>\n",
          "itemtype": "method",
          "name": "_createTabsList",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 230,
          "description": "<p>Closure action passed to content subcomponents that is called on init.\nEach child tab will register itself with this container. To ensure the\ntabList is only updated once per render, we proxy new tabs to the\n<code>_tabsToCreate</code> array and then push all of them to <code>tabList</code> using a\n<code>run.once</code> call to <code>_createTabsList</code></p>\n",
          "itemtype": "method",
          "name": "registerTab",
          "params": [
            {
              "name": "tab",
              "description": "<p>Object model of tab to be registered</p>\n",
              "type": "Object"
            }
          ],
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 208,
          "description": "<p>Action to show a tab. Set <code>activeId</code> to the passed elementId. <code>activeId</code>\nis passed down to children content components</p>\n",
          "itemtype": "method",
          "name": "showTab",
          "params": [
            {
              "name": "elementId",
              "description": "<p>HTML id of the tab to show</p>\n",
              "type": "String"
            }
          ],
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 244,
          "description": "<p>Closure action passed to content subcomponents that is called whenever\na tab has updated in a way this container needs to know of. Currently\nthis is only when a tab's <code>hidden</code> status changes.</p>\n",
          "itemtype": "method",
          "name": "updateTab",
          "params": [
            {
              "name": "tab",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "elementId",
                  "description": "HTML id of tab to update",
                  "type": "String"
                },
                {
                  "name": "hidden",
                  "description": "Hidden status of changed tab",
                  "type": "Boolean"
                }
              ]
            }
          ],
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        }
      ],
      "property": [
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 85,
          "description": "<p>The elementId of the currently opened tab. This determines which tab is active and\nwhich tab's content to display. If this is empty, no tabs are open.</p>\n",
          "itemtype": "property",
          "name": "activeId",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 140,
          "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
          "itemtype": "property",
          "name": "attributeBindings",
          "type": "{Array}",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 93,
          "description": "<p>Pass false to use tab style without primary color tabs.</p>\n",
          "itemtype": "property",
          "name": "buttonStyle",
          "type": "{Boolean}",
          "default": "true",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 147,
          "description": "<p>Class names: <code>core-tabs</code></p>\n",
          "itemtype": "property",
          "name": "classNames",
          "type": "{Array}",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 100,
          "description": "<p>The optional elementId of the tab that should be shown by default. This is\nuseful for cases where the user has come into a page and is expecting one\nof the tabs to be shown by default.</p>\n",
          "itemtype": "property",
          "name": "defaultTab",
          "type": "{String}",
          "default": "''",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 109,
          "description": "<p>Optional closure action that will be called whenever a tab is opened with\nthe id of that tab. Use this to create a controlled tabs instance.</p>\n",
          "itemtype": "property",
          "name": "onChange",
          "type": "{function}",
          "default": "null",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 117,
          "description": "<p>Whether the page should scroll the tab context back to the top when one of\nthe tabs is clicked. This can be a nice convenience for usabilitee.</p>\n",
          "itemtype": "property",
          "name": "scrollOnClick",
          "type": "{Boolean}",
          "default": "false",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 125,
          "description": "<p>What the target of the <code>scrollOnClick</code> behavior should be. By default,\nthe entire page/body scrolls, however if this instance of <code>core-tabs</code> is\ncontained within a modal or some other scrollable sub-container, it may\nbe more desirable to execute a scroll against that instead of the entire\npage. Simply pass a standard jQuery-like selector in as a string.</p>\n",
          "itemtype": "property",
          "name": "scrollTarget",
          "type": "{string}",
          "default": "'body, html'",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        },
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 153,
          "description": "<p>List of tabs to display. This is iterated through in the template to\nrendered the buttons that are used to change tabs.</p>\n",
          "itemtype": "property",
          "name": "tabList",
          "type": "{Array.<Object>}",
          "default": "null",
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        }
      ],
      "event": [
        {
          "file": "addon/components/fountainhead-tabs.js",
          "line": 183,
          "description": "<p>When the component initializes, we set the <code>tabList</code> property to an array.\nThis prevents multiple instances of core-tabs on a given page from\ninheriting the same tabList array through prototype inheritance.</p>\n",
          "itemtype": "event",
          "name": "init",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "CoreTabs",
          "srcFileId": "addon_components_fountainhead-tabs.js"
        }
      ],
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    "Docs.Classes": {
      "name": "Docs.Classes",
      "shortname": "Docs.Classes",
      "classitems": [
        {
          "file": "addon/routes/docs/classes.js",
          "line": 47,
          "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
          "itemtype": "event",
          "name": "didTransition",
          "class": "Docs.Classes",
          "srcFileId": "addon_routes_docs_classes.js"
        },
        {
          "file": "addon/controllers/docs/classes.js",
          "line": 17,
          "description": "<p>Item query param is available for scrolling to a doc item.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{?string}",
          "default": "null",
          "class": "Docs.Classes",
          "srcFileId": "addon_controllers_docs_classes.js"
        },
        {
          "file": "addon/routes/docs/classes.js",
          "line": 17,
          "description": "<p>Fetches class' JSON at: <code>${this.get('fountainhead.apiNamespace')}/classes/${params.class_id}.json</code></p>\n",
          "itemtype": "method",
          "name": "model",
          "params": [
            {
              "name": "params",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "class_id",
                  "description": "Name of this class, use to fetch data",
                  "type": "String"
                }
              ]
            }
          ],
          "return": {
            "description": "jQuery ajax promise",
            "type": "Promise"
          },
          "class": "Docs.Classes",
          "srcFileId": "addon_routes_docs_classes.js"
        },
        {
          "file": "addon/controllers/docs/classes.js",
          "line": 11,
          "itemtype": "property",
          "name": "queryParams",
          "type": "{Array}",
          "default": "['item']",
          "class": "Docs.Classes",
          "srcFileId": "addon_controllers_docs_classes.js"
        },
        {
          "file": "addon/routes/docs/classes.js",
          "line": 27,
          "description": "<p>We don't want the class <code>item</code> query param to be sticky. If it is, then you\ncan end up pre-scrolled to some previously crosslinked item when returning\nto a class.</p>\n<p>The <code>resetController</code> hook is called anytime a route's model changes or the\nroute is exited, and is the recommended time to reset query param values on\na controller.</p>\n",
          "itemtype": "method",
          "name": "resetController",
          "params": [
            {
              "name": "controller",
              "description": null,
              "type": "Object"
            },
            {
              "name": "isExiting",
              "description": null,
              "type": "Boolean"
            },
            {
              "name": "transition",
              "description": null,
              "type": "Object"
            }
          ],
          "class": "Docs.Classes",
          "srcFileId": "addon_routes_docs_classes.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/routes/docs/classes.js",
      "line": 5,
      "description": "<p>Route handles fetching data for an individual class.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Controller",
      "method": [
        {
          "file": "addon/routes/docs/classes.js",
          "line": 17,
          "description": "<p>Fetches class' JSON at: <code>${this.get('fountainhead.apiNamespace')}/classes/${params.class_id}.json</code></p>\n",
          "itemtype": "method",
          "name": "model",
          "params": [
            {
              "name": "params",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "class_id",
                  "description": "Name of this class, use to fetch data",
                  "type": "String"
                }
              ]
            }
          ],
          "return": {
            "description": "jQuery ajax promise",
            "type": "Promise"
          },
          "class": "Docs.Classes",
          "srcFileId": "addon_routes_docs_classes.js"
        },
        {
          "file": "addon/routes/docs/classes.js",
          "line": 27,
          "description": "<p>We don't want the class <code>item</code> query param to be sticky. If it is, then you\ncan end up pre-scrolled to some previously crosslinked item when returning\nto a class.</p>\n<p>The <code>resetController</code> hook is called anytime a route's model changes or the\nroute is exited, and is the recommended time to reset query param values on\na controller.</p>\n",
          "itemtype": "method",
          "name": "resetController",
          "params": [
            {
              "name": "controller",
              "description": null,
              "type": "Object"
            },
            {
              "name": "isExiting",
              "description": null,
              "type": "Boolean"
            },
            {
              "name": "transition",
              "description": null,
              "type": "Object"
            }
          ],
          "class": "Docs.Classes",
          "srcFileId": "addon_routes_docs_classes.js"
        }
      ],
      "property": [
        {
          "file": "addon/controllers/docs/classes.js",
          "line": 17,
          "description": "<p>Item query param is available for scrolling to a doc item.</p>\n",
          "itemtype": "property",
          "name": "item",
          "type": "{?string}",
          "default": "null",
          "class": "Docs.Classes",
          "srcFileId": "addon_controllers_docs_classes.js"
        },
        {
          "file": "addon/controllers/docs/classes.js",
          "line": 11,
          "itemtype": "property",
          "name": "queryParams",
          "type": "{Array}",
          "default": "['item']",
          "class": "Docs.Classes",
          "srcFileId": "addon_controllers_docs_classes.js"
        }
      ],
      "event": [
        {
          "file": "addon/routes/docs/classes.js",
          "line": 47,
          "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
          "itemtype": "event",
          "name": "didTransition",
          "class": "Docs.Classes",
          "srcFileId": "addon_routes_docs_classes.js"
        }
      ],
      "srcFileId": "addon_routes_docs_classes.js"
    },
    "Helper.Eq": {
      "name": "Helper.Eq",
      "shortname": "Helper.Eq",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/helpers/eq.js",
      "line": 3,
      "description": "<p>Helper to compare two values to see if they are equal. Values must be of the same type.</p>\n",
      "is_constructor": 1,
      "params": [
        {
          "name": "args",
          "description": "Positional args passed to helper should be compared",
          "type": "Array"
        }
      ],
      "return": {
        "description": "",
        "type": "Boolean"
      },
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "addon_helpers_eq.js"
    },
    "Docs.Files": {
      "name": "Docs.Files",
      "shortname": "Docs.Files",
      "classitems": [
        {
          "file": "addon/routes/docs/files.js",
          "line": 28,
          "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
          "itemtype": "event",
          "name": "didTransition",
          "class": "Docs.Files",
          "srcFileId": "addon_routes_docs_files.js"
        },
        {
          "file": "addon/routes/docs/files.js",
          "line": 14,
          "description": "<p>Fetches file's JSON at: <code>${this.get('fountainhead.apiNamespace')}/files/${params.file_id}.json</code></p>\n",
          "itemtype": "method",
          "name": "model",
          "params": [
            {
              "name": "params",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "file_id",
                  "description": "Name of this class, use to fetch data",
                  "type": "String"
                }
              ]
            }
          ],
          "return": {
            "description": "jQuery ajax promise",
            "type": "Promise"
          },
          "class": "Docs.Files",
          "srcFileId": "addon_routes_docs_files.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/routes/docs/files.js",
      "line": 5,
      "description": "<p>Route handles fetching data for a source file.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Route",
      "method": [
        {
          "file": "addon/routes/docs/files.js",
          "line": 14,
          "description": "<p>Fetches file's JSON at: <code>${this.get('fountainhead.apiNamespace')}/files/${params.file_id}.json</code></p>\n",
          "itemtype": "method",
          "name": "model",
          "params": [
            {
              "name": "params",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "file_id",
                  "description": "Name of this class, use to fetch data",
                  "type": "String"
                }
              ]
            }
          ],
          "return": {
            "description": "jQuery ajax promise",
            "type": "Promise"
          },
          "class": "Docs.Files",
          "srcFileId": "addon_routes_docs_files.js"
        }
      ],
      "property": [],
      "event": [
        {
          "file": "addon/routes/docs/files.js",
          "line": 28,
          "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
          "itemtype": "event",
          "name": "didTransition",
          "class": "Docs.Files",
          "srcFileId": "addon_routes_docs_files.js"
        }
      ],
      "srcFileId": "addon_routes_docs_files.js"
    },
    "Docs.Modules": {
      "name": "Docs.Modules",
      "shortname": "Docs.Modules",
      "classitems": [
        {
          "file": "addon/routes/docs/modules.js",
          "line": 28,
          "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
          "itemtype": "event",
          "name": "didTransition",
          "class": "Docs.Modules",
          "srcFileId": "addon_routes_docs_modules.js"
        },
        {
          "file": "addon/routes/docs/modules.js",
          "line": 14,
          "description": "<p>Fetches modules's JSON at: <code>${this.get('fountainhead.apiNamespace')}/modules/${params.file_id}.json</code></p>\n",
          "itemtype": "method",
          "name": "model",
          "params": [
            {
              "name": "params",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "module_id",
                  "description": "Name of this class, use to fetch data",
                  "type": "String"
                }
              ]
            }
          ],
          "return": {
            "description": "jQuery ajax promise",
            "type": "Promise"
          },
          "class": "Docs.Modules",
          "srcFileId": "addon_routes_docs_modules.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/routes/docs/modules.js",
      "line": 5,
      "description": "<p>Route to be created for handling modules</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Route",
      "method": [
        {
          "file": "addon/routes/docs/modules.js",
          "line": 14,
          "description": "<p>Fetches modules's JSON at: <code>${this.get('fountainhead.apiNamespace')}/modules/${params.file_id}.json</code></p>\n",
          "itemtype": "method",
          "name": "model",
          "params": [
            {
              "name": "params",
              "description": null,
              "type": "Object",
              "props": [
                {
                  "name": "module_id",
                  "description": "Name of this class, use to fetch data",
                  "type": "String"
                }
              ]
            }
          ],
          "return": {
            "description": "jQuery ajax promise",
            "type": "Promise"
          },
          "class": "Docs.Modules",
          "srcFileId": "addon_routes_docs_modules.js"
        }
      ],
      "property": [],
      "event": [
        {
          "file": "addon/routes/docs/modules.js",
          "line": 28,
          "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
          "itemtype": "event",
          "name": "didTransition",
          "class": "Docs.Modules",
          "srcFileId": "addon_routes_docs_modules.js"
        }
      ],
      "srcFileId": "addon_routes_docs_modules.js"
    },
    "Fountainhead": {
      "name": "Fountainhead",
      "shortname": "Fountainhead",
      "classitems": [
        {
          "file": "addon/services/fountainhead.js",
          "line": 18,
          "description": "<p>All Fountainhead API requests are prefixed with this namespace. If you\nexport your docs JSON files to a non-default location, or your application\nis served under a namespace you can overwrite this property to match your\nendpoint's root url namespace.</p>\n",
          "itemtype": "property",
          "name": "apiNamespace",
          "type": "{string}",
          "default": "'/docs'",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        },
        {
          "file": "addon/services/fountainhead.js",
          "line": 51,
          "description": "<p>When this service is loaded, handle fetching documentation meta data that\ndrives the sidebar &amp;&amp; header. If there is an error we know tha we haven't\ngenerated documentation yet. The docs template will pick up the error and\ndisplay the getting started instructions.</p>\n<p>NOTE: the meta request needs to be wrapped in a <code>run.next</code> so that if a\nconsuming application needs to override the <code>apiNamespace</code> the meta call\nis made with the new namespace. Without the run loop, attempting to set\nthe namespace will initialize this service and call for meta before the\nnamespace update is complete and the request will use the default <code>/docs</code>\nnamespace.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        },
        {
          "file": "addon/services/fountainhead.js",
          "line": 28,
          "description": "<p>Documentation meta fetched from <code>/meta.json</code>. Contains high level map\nof modules and classes available in documentation. Used for sidebar and\nmapping item and return types.\nThis property is initialized to null so that the sidebar has an explicit\nvalue to bind aria-hidden to. When there is no meta, there is no sidebar.</p>\n",
          "itemtype": "property",
          "name": "meta",
          "type": "{?Object}",
          "default": "null",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        },
        {
          "file": "addon/services/fountainhead.js",
          "line": 39,
          "description": "<p>Flag used by docs route to show getting started instructions if the call for\ndocumentation meta fails.</p>\n",
          "itemtype": "property",
          "name": "metaError",
          "type": "{Boolean}",
          "default": "false",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Addon",
      "file": "addon/services/fountainhead.js",
      "line": 7,
      "description": "<p>Fountainhead application service.</p>\n",
      "is_constructor": 1,
      "extends": "Ember.Service",
      "method": [
        {
          "file": "addon/services/fountainhead.js",
          "line": 51,
          "description": "<p>When this service is loaded, handle fetching documentation meta data that\ndrives the sidebar &amp;&amp; header. If there is an error we know tha we haven't\ngenerated documentation yet. The docs template will pick up the error and\ndisplay the getting started instructions.</p>\n<p>NOTE: the meta request needs to be wrapped in a <code>run.next</code> so that if a\nconsuming application needs to override the <code>apiNamespace</code> the meta call\nis made with the new namespace. Without the run loop, attempting to set\nthe namespace will initialize this service and call for meta before the\nnamespace update is complete and the request will use the default <code>/docs</code>\nnamespace.</p>\n",
          "itemtype": "method",
          "name": "init",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        }
      ],
      "property": [
        {
          "file": "addon/services/fountainhead.js",
          "line": 18,
          "description": "<p>All Fountainhead API requests are prefixed with this namespace. If you\nexport your docs JSON files to a non-default location, or your application\nis served under a namespace you can overwrite this property to match your\nendpoint's root url namespace.</p>\n",
          "itemtype": "property",
          "name": "apiNamespace",
          "type": "{string}",
          "default": "'/docs'",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        },
        {
          "file": "addon/services/fountainhead.js",
          "line": 28,
          "description": "<p>Documentation meta fetched from <code>/meta.json</code>. Contains high level map\nof modules and classes available in documentation. Used for sidebar and\nmapping item and return types.\nThis property is initialized to null so that the sidebar has an explicit\nvalue to bind aria-hidden to. When there is no meta, there is no sidebar.</p>\n",
          "itemtype": "property",
          "name": "meta",
          "type": "{?Object}",
          "default": "null",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        },
        {
          "file": "addon/services/fountainhead.js",
          "line": 39,
          "description": "<p>Flag used by docs route to show getting started instructions if the call for\ndocumentation meta fails.</p>\n",
          "itemtype": "property",
          "name": "metaError",
          "type": "{Boolean}",
          "default": "false",
          "class": "Fountainhead",
          "srcFileId": "addon_services_fountainhead.js"
        }
      ],
      "event": [],
      "srcFileId": "addon_services_fountainhead.js"
    },
    "FountainheadRoutes": {
      "name": "FountainheadRoutes",
      "shortname": "FountainheadRoutes",
      "classitems": [
        {
          "file": "app/instance-initializers/fountainhead-routes.js",
          "line": 23,
          "description": "<p>Initialize route that is called by consuming Ember application\n<code>Router</code> instance from the consuming application can directly mapped.</p>\n",
          "itemtype": "method",
          "name": "initialize",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainheadRoutes",
          "module": "App",
          "srcFileId": "app_instance-initializers_fountainhead-routes.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "App",
      "namespace": "",
      "file": "app/instance-initializers/fountainhead-routes.js",
      "line": 11,
      "description": "<p>Automagically mount Fountainhead routes through an <code>instance-initializer</code>.</p>\n<p>NOTE: this initializer needs to be in the <code>/app</code> directory so that the the\nconsuming application's router can be directly imported and manipulated.</p>\n<p>TODO: See if we can use some kind of lookup to do this from within an\ninitializer in the <code>/addon</code> directory</p>\n",
      "is_constructor": 1,
      "method": [
        {
          "file": "app/instance-initializers/fountainhead-routes.js",
          "line": 23,
          "description": "<p>Initialize route that is called by consuming Ember application\n<code>Router</code> instance from the consuming application can directly mapped.</p>\n",
          "itemtype": "method",
          "name": "initialize",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "FountainheadRoutes",
          "module": "App",
          "srcFileId": "app_instance-initializers_fountainhead-routes.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "app_instance-initializers_fountainhead-routes.js"
    },
    "EmberFountainhead.Index": {
      "name": "EmberFountainhead.Index",
      "shortname": "EmberFountainhead.Index",
      "classitems": [
        {
          "file": "blueprints/ember-fountainhead/index.js",
          "line": 29,
          "description": "<p>After install of addon read in consuming application's gitignore. If there\nisn't an entry for <code>vendor/feature-flags.js</code>, use node <code>fs</code> to append it.</p>\n",
          "itemtype": "method",
          "name": "afterInstall",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "EmberFountainhead.Index",
          "module": "Blueprints",
          "srcFileId": "blueprints_ember-fountainhead_index.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Blueprints",
      "namespace": "",
      "file": "blueprints/ember-fountainhead/index.js",
      "line": 12,
      "description": "<p>Fountainhead index blueprint is used to update the consuming application's\n<code>.gitignore</code> to ignore the auto generated <code>vendor/feature-flags.js</code> file\ncreated by <code>ember-radical</code>. This file is used to create global variables if\nthe consuming application has turned off JSUglify code stripping.</p>\n",
      "is_constructor": 1,
      "extends": "EmberCLI.Blueprint",
      "method": [
        {
          "file": "blueprints/ember-fountainhead/index.js",
          "line": 29,
          "description": "<p>After install of addon read in consuming application's gitignore. If there\nisn't an entry for <code>vendor/feature-flags.js</code>, use node <code>fs</code> to append it.</p>\n",
          "itemtype": "method",
          "name": "afterInstall",
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "EmberFountainhead.Index",
          "module": "Blueprints",
          "srcFileId": "blueprints_ember-fountainhead_index.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "blueprints_ember-fountainhead_index.js"
    },
    "DataTypes.GenerateClasses": {
      "name": "DataTypes.GenerateClasses",
      "shortname": "DataTypes.GenerateClasses",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "generateFountainheadData"
      ],
      "module": "Lib",
      "namespace": "",
      "file": "lib/data-types/generate-classes.js",
      "line": 4,
      "description": "<p>Module handles decorating and compiling classes and their class items including:</p>\n<ul>\n<li>Compiling each class item to its class</li>\n<li>Creating an id for class and class src file</li>\n<li>Parsing class and class item descriptions markdown to HTML</li>\n</ul>\n",
      "is_constructor": 1,
      "params": [
        {
          "name": "classes",
          "description": "Object of raw YUIDoc classes",
          "type": "Object"
        },
        {
          "name": "classItems",
          "description": "Array of raw YUIDoc classItems",
          "type": "Object"
        }
      ],
      "return": {
        "description": "Returns object: `{ classesMeta, classesDatas }` for saving",
        "type": "Object"
      },
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "lib_data-types_generate-classes.js"
    },
    "DataTypes.GenerateModules": {
      "name": "DataTypes.GenerateModules",
      "shortname": "DataTypes.GenerateModules",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "generateFountainheadData"
      ],
      "module": "Lib",
      "namespace": "",
      "file": "lib/data-types/generate-modules.js",
      "line": 4,
      "description": "<p>Handle parsing/decorating raw YUIDoc modules data including:</p>\n<ul>\n<li>Generate meta objects for each module that can be used for the sidebar nav</li>\n<li>Create an array of modules from YUIDoc object of modules for standard lib format</li>\n<li>Parse module markdown description to HTML</li>\n</ul>\n",
      "params": [
        {
          "name": "modules",
          "description": "YUIDoc raw modules object",
          "type": "Object"
        }
      ],
      "return": {
        "description": "Returns object: `{ modulesMeta, modulesDatas }` for saving",
        "type": "Object"
      },
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "lib_data-types_generate-modules.js"
    },
    "DataTypes.GenerateSrcFile": {
      "name": "DataTypes.GenerateSrcFile",
      "shortname": "DataTypes.GenerateSrcFile",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "generateFountainheadData"
      ],
      "module": "Lib",
      "namespace": "",
      "file": "lib/data-types/generate-src-file.js",
      "line": 5,
      "description": "<p>Handle syntax highlighting and creating meta information for a src file</p>\n",
      "is_constructor": 1,
      "params": [
        {
          "name": "filePath",
          "description": "File filepath from class definition",
          "type": "String"
        }
      ],
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "lib_data-types_generate-src-file.js"
    },
    "createDirs": {
      "name": "createDirs",
      "shortname": "createDirs",
      "classitems": [
        {
          "file": "lib/create-dirs.js",
          "line": 19,
          "description": "<p>Synchronous mkdir that handles creating a potentially nested directory</p>\n",
          "itemtype": "method",
          "name": "mkdirSync",
          "params": [
            {
              "name": "dirPath",
              "description": "<p>Directory path to create, can be nested</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "createDirs",
          "module": "Lib",
          "srcFileId": "lib_create-dirs.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "Index"
      ],
      "module": "Lib",
      "namespace": "",
      "file": "lib/create-dirs.js",
      "line": 7,
      "description": "<p>Handle creating output directories for Fountainhead data.</p>\n",
      "is_constructor": 1,
      "params": [
        {
          "name": "output",
          "description": "Project output configurations",
          "type": "Object"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "method": [
        {
          "file": "lib/create-dirs.js",
          "line": 19,
          "description": "<p>Synchronous mkdir that handles creating a potentially nested directory</p>\n",
          "itemtype": "method",
          "name": "mkdirSync",
          "params": [
            {
              "name": "dirPath",
              "description": "<p>Directory path to create, can be nested</p>\n",
              "type": "String"
            }
          ],
          "return": {
            "description": "",
            "type": "Undefined"
          },
          "class": "createDirs",
          "module": "Lib",
          "srcFileId": "lib_create-dirs.js"
        }
      ],
      "property": [],
      "event": [],
      "srcFileId": "lib_create-dirs.js"
    },
    "decorateConfig": {
      "name": "decorateConfig",
      "shortname": "decorateConfig",
      "classitems": [
        {
          "file": "lib/decorate-config.js",
          "line": 21,
          "description": "<p>Configuration entry should be an array of directory paths (YUIDoc can't\nparse individual files unfortunately). The default entry is <code>app</code> when the\nconsumer is an application and <code>addon</code> when the consumer is an addon.</p>\n",
          "itemtype": "property",
          "name": "entry",
          "type": "{Array}",
          "default": "['app'] | ['addon']",
          "class": "decorateConfig",
          "module": "Lib",
          "srcFileId": "lib_decorate-config.js"
        },
        {
          "file": "lib/decorate-config.js",
          "line": 29,
          "description": "<p>Configuration output path should be a directory path. The default is <code>public/docs</code>\nwhen the consumer is an application and <code>tests/dummy/public/docs</code> when the\nconsumer is an addon (Outputting the docs to <code>/public</code> in an addon signals\nEmber CLI to bundle your docs into any consuming applications <code>/public</code> dir\nwhich is not the default behavior we want).</p>\n",
          "itemtype": "property",
          "name": "outputPath",
          "type": "{string}",
          "default": "'public/docs' | 'tests/dummy/public/docs'",
          "class": "decorateConfig",
          "module": "Lib",
          "srcFileId": "lib_decorate-config.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "Index"
      ],
      "module": "Lib",
      "namespace": "",
      "file": "lib/decorate-config.js",
      "line": 4,
      "description": "<p>Handle adding default values to config and validating required properties\nare present</p>\n",
      "is_constructor": 1,
      "params": [
        {
          "name": "config",
          "description": "Project configuration file",
          "type": "Object"
        },
        {
          "name": "packageJSON",
          "description": "Project package.json file",
          "type": "Object"
        }
      ],
      "return": {
        "description": "Fully decorated and validated project configuration file",
        "type": "Object"
      },
      "method": [],
      "property": [
        {
          "file": "lib/decorate-config.js",
          "line": 21,
          "description": "<p>Configuration entry should be an array of directory paths (YUIDoc can't\nparse individual files unfortunately). The default entry is <code>app</code> when the\nconsumer is an application and <code>addon</code> when the consumer is an addon.</p>\n",
          "itemtype": "property",
          "name": "entry",
          "type": "{Array}",
          "default": "['app'] | ['addon']",
          "class": "decorateConfig",
          "module": "Lib",
          "srcFileId": "lib_decorate-config.js"
        },
        {
          "file": "lib/decorate-config.js",
          "line": 29,
          "description": "<p>Configuration output path should be a directory path. The default is <code>public/docs</code>\nwhen the consumer is an application and <code>tests/dummy/public/docs</code> when the\nconsumer is an addon (Outputting the docs to <code>/public</code> in an addon signals\nEmber CLI to bundle your docs into any consuming applications <code>/public</code> dir\nwhich is not the default behavior we want).</p>\n",
          "itemtype": "property",
          "name": "outputPath",
          "type": "{string}",
          "default": "'public/docs' | 'tests/dummy/public/docs'",
          "class": "decorateConfig",
          "module": "Lib",
          "srcFileId": "lib_decorate-config.js"
        }
      ],
      "event": [],
      "srcFileId": "lib_decorate-config.js"
    },
    "generateFountainheadData": {
      "name": "generateFountainheadData",
      "shortname": "generateFountainheadData",
      "classitems": [
        {
          "file": "lib/generate-fountainhead-data.js",
          "line": 63,
          "description": "<p>The <code>docsMeta</code> object is the guide for the documentation data. It contains\ndescriptions of the project as well as arrays of module and class routing\ninformation</p>\n",
          "itemtype": "property",
          "name": "docsMeta",
          "type": "{Object}",
          "class": "generateFountainheadData",
          "module": "Lib",
          "srcFileId": "lib_generate-fountainhead-data.js"
        },
        {
          "file": "lib/generate-fountainhead-data.js",
          "line": 38,
          "description": "<p>Call to handle saving data to a file. Requires a file path and data to save.\nIf data is not a string, it will be stringified</p>\n",
          "itemtype": "method",
          "name": "saveObjectToJSON",
          "params": [
            {
              "name": "filePath",
              "description": "<p>Path to save file at</p>\n",
              "type": "String"
            },
            {
              "name": "data",
              "description": "<p>Data to save in file</p>\n",
              "type": "Object|string"
            }
          ],
          "return": {
            "description": "True for successful operation, false for failures",
            "type": "Boolean"
          },
          "class": "generateFountainheadData",
          "module": "Lib",
          "srcFileId": "lib_generate-fountainhead-data.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [
        "Index"
      ],
      "module": "Lib",
      "namespace": "",
      "file": "lib/generate-fountainhead-data.js",
      "line": 9,
      "description": "<p>This module handles coordinating parsing/reading/saving all of the individual\nFountainhead data files after the configs have been validated and the raw\nYUIDoc data has been generated.</p>\n<p>Module should:</p>\n<ul>\n<li>create and populate <code>docsMeta</code> that will be saved as <code>meta.json</code></li>\n<li>generate decorated modules files</li>\n<li>generate decorated class files</li>\n<li>generate decorated src file files</li>\n</ul>\n<p>NOTE: When switching doc generation from an executable to a function call\nall file operations had to be changed to a synchronous operation b/c the ember\ncommand finishes before the async file operations are complete and the contents\nare not written to file. This can be switched back to an async method by\nassembling and returning a promise.all for all async file calls</p>\n",
      "is_constructor": 1,
      "uses": [
        "DataTypes.GenerateModules",
        "DataTypes.GenerateClasses",
        "DataTypes.GenerateSrcFile"
      ],
      "params": [
        {
          "name": "config",
          "description": "Project configuration file",
          "type": "Object"
        },
        {
          "name": "yuidocJSON",
          "description": "Raw yuidoc generated documentation JSON",
          "type": "Object"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "method": [
        {
          "file": "lib/generate-fountainhead-data.js",
          "line": 38,
          "description": "<p>Call to handle saving data to a file. Requires a file path and data to save.\nIf data is not a string, it will be stringified</p>\n",
          "itemtype": "method",
          "name": "saveObjectToJSON",
          "params": [
            {
              "name": "filePath",
              "description": "<p>Path to save file at</p>\n",
              "type": "String"
            },
            {
              "name": "data",
              "description": "<p>Data to save in file</p>\n",
              "type": "Object|string"
            }
          ],
          "return": {
            "description": "True for successful operation, false for failures",
            "type": "Boolean"
          },
          "class": "generateFountainheadData",
          "module": "Lib",
          "srcFileId": "lib_generate-fountainhead-data.js"
        }
      ],
      "property": [
        {
          "file": "lib/generate-fountainhead-data.js",
          "line": 63,
          "description": "<p>The <code>docsMeta</code> object is the guide for the documentation data. It contains\ndescriptions of the project as well as arrays of module and class routing\ninformation</p>\n",
          "itemtype": "property",
          "name": "docsMeta",
          "type": "{Object}",
          "class": "generateFountainheadData",
          "module": "Lib",
          "srcFileId": "lib_generate-fountainhead-data.js"
        }
      ],
      "event": [],
      "srcFileId": "lib_generate-fountainhead-data.js"
    },
    "Index": {
      "name": "Index",
      "shortname": "Index",
      "classitems": [
        {
          "file": "lib/index.js",
          "line": 34,
          "description": "<p>Optional configs pulled from <code>fountainhead.js</code></p>\n",
          "itemtype": "property",
          "name": "fountainheadConfig",
          "type": "{Object}",
          "class": "Index",
          "module": "Lib",
          "srcFileId": "lib_index.js"
        },
        {
          "file": "lib/index.js",
          "line": 39,
          "description": "<p>Package JSON for project. Used to populate project description if not\ndefined in <code>fountainhead.js</code> config.</p>\n",
          "itemtype": "property",
          "name": "packageJSON",
          "type": "{Object}",
          "class": "Index",
          "module": "Lib",
          "srcFileId": "lib_index.js"
        },
        {
          "file": "lib/index.js",
          "line": 68,
          "description": "<p>Raw YUIDoc JSON data generated using constructor exported by <code>yuidocjs</code>.\nCall new with options from config to pass configs to YUIDoc and call <code>run</code>\nto generate JSON</p>\n",
          "itemtype": "property",
          "name": "yuidocJSON",
          "type": "{Object}",
          "class": "Index",
          "module": "Lib",
          "srcFileId": "lib_index.js"
        }
      ],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Lib",
      "namespace": "",
      "file": "lib/index.js",
      "line": 10,
      "description": "<p>Fountainhead documentation data generation lib entry. Configuration is set\nthrough <code>fountainhead.js</code> file. (TODO: Add default configs to decorate-config)\nclass and link.</p>\n<p>The entry handles:</p>\n<ol>\n<li>Safe require of <code>package.json</code> &amp;&amp; <code>fountainhead.js</code> files for configs</li>\n<li>Decoration &amp;&amp; validation of project configs</li>\n<li>Generation of raw YUIDoc JSON through YUIDoc module directly</li>\n<li>Decoration of raw data in <code>generate-fountainhead-data</code> module.</li>\n</ol>\n<p>The primary module is the <code>generate-fountainhead-data</code> which handles all of\nthe decoration and file creation required for Fountainhead.</p>\n",
      "is_constructor": 1,
      "uses": [
        "decorateConfig",
        "createDirs",
        "generateFountainheadData"
      ],
      "method": [],
      "property": [
        {
          "file": "lib/index.js",
          "line": 34,
          "description": "<p>Optional configs pulled from <code>fountainhead.js</code></p>\n",
          "itemtype": "property",
          "name": "fountainheadConfig",
          "type": "{Object}",
          "class": "Index",
          "module": "Lib",
          "srcFileId": "lib_index.js"
        },
        {
          "file": "lib/index.js",
          "line": 39,
          "description": "<p>Package JSON for project. Used to populate project description if not\ndefined in <code>fountainhead.js</code> config.</p>\n",
          "itemtype": "property",
          "name": "packageJSON",
          "type": "{Object}",
          "class": "Index",
          "module": "Lib",
          "srcFileId": "lib_index.js"
        },
        {
          "file": "lib/index.js",
          "line": 68,
          "description": "<p>Raw YUIDoc JSON data generated using constructor exported by <code>yuidocjs</code>.\nCall new with options from config to pass configs to YUIDoc and call <code>run</code>\nto generate JSON</p>\n",
          "itemtype": "property",
          "name": "yuidocJSON",
          "type": "{Object}",
          "class": "Index",
          "module": "Lib",
          "srcFileId": "lib_index.js"
        }
      ],
      "event": [],
      "srcFileId": "lib_index.js"
    },
    "parseMarkdown": {
      "name": "parseMarkdown",
      "shortname": "parseMarkdown",
      "classitems": [],
      "plugins": [],
      "extensions": [],
      "plugin_for": [],
      "extension_for": [],
      "module": "Lib",
      "namespace": "",
      "file": "lib/parse-markdown.js",
      "line": 28,
      "description": "<p>Handle parsing markdown using <a href=\"http://prismjs.com/\">Prism</a></p>\n",
      "is_constructor": 1,
      "params": [
        {
          "name": "description",
          "description": "Markdown string to parse",
          "type": "String"
        }
      ],
      "return": {
        "description": "HTML string parsed from passed markdown",
        "type": "String"
      },
      "method": [],
      "property": [],
      "event": [],
      "srcFileId": "lib_parse-markdown.js"
    }
  },
  "elements": {},
  "classitems": [
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 66,
      "description": "<p>Looks through the passed-in template string and checks for action helpers;\nwhen it finds some, it checks for the actions referenced and registers no-ops\nfor them on this component's context so that the application doesn't explode\nwhen trying to reference a non-existent action.</p>\n",
      "itemtype": "method",
      "name": "_checkActionRefs",
      "params": [
        {
          "name": "templateString",
          "description": "<p>The template string to run the check for action matches on</p>\n",
          "type": "String"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 165,
      "description": "<p>Internal method that can be used with a <code>run.once</code> call to only add new tabs\nonce per run loop. Simply iterates through <code>_tabsToCreate</code> and pushes them\ninto the <code>tabList</code>. This is needed to prevent multiple renders in a single\nrun loop when all of the <code>content</code> subcomponents register themselves with\nthe container during init.</p>\n",
      "itemtype": "method",
      "name": "_createTabsList",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 100,
      "description": "<p>Grabs the input from the parent instance's code editor, compiles it into a\nreal-live HTMLBars template, registers it on the container as a partial\nand makes it available as output for the preview component's template to\nrender.</p>\n<p>New partials are created for every change, using a date string as the\npartial name to avoid collisions.</p>\n<p>TODO: Use lookup partial names that can be mapped and retrieved instead of\nmaking new ones each time</p>\n",
      "itemtype": "method",
      "name": "_generateDescription",
      "params": [
        {
          "name": "templateString",
          "description": "<p>String to generate template from</p>\n",
          "type": "String"
        }
      ],
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 80,
      "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
      "itemtype": "property",
      "name": "_hidden",
      "return": {
        "description": "String of true/false for use with `aria-hidden` binding",
        "type": "String"
      },
      "class": "CoreTabs.Content",
      "subprops": [
        {
          "name": "activeId",
          "description": "",
          "type": "String"
        },
        {
          "name": "hidden",
          "description": "",
          "type": "Boolean"
        }
      ],
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 108,
      "description": "<p>Internal method to handle selecting a tab panel and then scrolling to an\nitem in that panel.</p>\n<p>Method will:</p>\n<ul>\n<li>Change to the panel matching the doc item type</li>\n<li>Scroll to that item using the itemtype and name to construct the DOM id</li>\n</ul>\n",
      "itemtype": "method",
      "name": "_scrollToItem",
      "access": "protected",
      "tagname": "",
      "params": [
        {
          "name": "classitem",
          "description": "<p>Backing class item</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "itemtype",
              "description": "Type for item of: `method`/`property`/`event`",
              "type": "String"
            },
            {
              "name": "name",
              "description": "Name of item",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 146,
      "description": "<p>Handles finding the classitem model using the <code>item</code> query param value.\nIf a classitem is found, initiate a scroll.</p>\n",
      "itemtype": "method",
      "name": "_scrollToQueryParamItem",
      "access": "protected",
      "tagname": "",
      "params": [
        {
          "name": "item",
          "description": "<p>The item query param identifying which classitem to scroll to</p>\n",
          "type": "!string"
        }
      ],
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 108,
      "description": "<p>Allows for quick and easy dismissal of the alert. The alert is faded from\nview, then totally removed from the DOM and the component instance is\ndestroyed.</p>\n",
      "itemtype": "method",
      "name": "_selfDestruct",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 17,
      "description": "<p>The access property is set by using either of the tags:</p>\n<ul>\n<li><code>@private</code></li>\n<li><code>@public</code></li>\n</ul>\n<p>The value for access matches the tag used</p>\n",
      "itemtype": "property",
      "name": "access",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 127,
      "description": "<p>Actions hash</p>\n",
      "itemtype": "property",
      "name": "actions",
      "type": "{Object}",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 85,
      "description": "<p>The elementId of the currently opened tab. This determines which tab is active and\nwhich tab's content to display. If this is empty, no tabs are open.</p>\n",
      "itemtype": "property",
      "name": "activeId",
      "type": "{String}",
      "default": "''",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 36,
      "description": "<p>The id of the currently active tab in the scope of the core-tabs component.\nThis is provided privately in the <code>core-tabs</code> yield hash.</p>\n",
      "itemtype": "property",
      "name": "activeId",
      "type": "{String}",
      "default": "''",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 79,
      "description": "<p>The currently active tab. This is controlled by this component to allow\nus to change the tab whenever a documentation item is clicked in the index\npanel.</p>\n",
      "itemtype": "property",
      "name": "activeTab",
      "type": "{string}",
      "access": "protected",
      "tagname": "",
      "default": "indexPanel",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "blueprints/ember-fountainhead/index.js",
      "line": 29,
      "description": "<p>After install of addon read in consuming application's gitignore. If there\nisn't an entry for <code>vendor/feature-flags.js</code>, use node <code>fs</code> to append it.</p>\n",
      "itemtype": "method",
      "name": "afterInstall",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "EmberFountainhead.Index",
      "module": "Blueprints",
      "srcFileId": "blueprints_ember-fountainhead_index.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 18,
      "description": "<p>All Fountainhead API requests are prefixed with this namespace. If you\nexport your docs JSON files to a non-default location, or your application\nis served under a namespace you can overwrite this property to match your\nendpoint's root url namespace.</p>\n",
      "itemtype": "property",
      "name": "apiNamespace",
      "type": "{string}",
      "default": "'/docs'",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 59,
      "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
      "itemtype": "property",
      "name": "ariaRole",
      "type": "{string}",
      "default": "tabpanel",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 30,
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "default": "['stringForAriaHidden:aria-hidden']",
      "class": "FountainHead.Docs.Sidebar",
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 140,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 51,
      "description": "<p>ALLLLLLLLLLL the attributes you might need.\nNOTE: <code>role</code> should not be bound here. You can set the role of a button\nby passing an <a href=\"http://emberjs.com/api/classes/Ember.Component.html#property_ariaRole\">ariaRole</a> prop.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 66,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 76,
      "description": "<p>Attribute bindings applied to the component.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "access": "private",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-svg.js",
      "line": 30,
      "description": "<p>Allow direct binding of <code>data-test</code> attributes so that icons can be\ndirectly targeted in automated testing.</p>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "FountainHead.Shared.CoreSVG",
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 18,
      "description": "<p>Pass a brand to have <code>btn-${brand}</code> class applied</p>\n",
      "itemtype": "property",
      "name": "brand",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 15,
      "description": "<p>Specify brand, component handles assigning correct css class</p>\n",
      "itemtype": "property",
      "name": "brand",
      "default": "''",
      "type": "{string}",
      "access": "public",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 37,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "class": "FountainHead.Shared.Button",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 54,
      "description": "<p>Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names</p>\n",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "access": "private",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ],
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 93,
      "description": "<p>Pass false to use tab style without primary color tabs.</p>\n",
      "itemtype": "property",
      "name": "buttonStyle",
      "type": "{Boolean}",
      "default": "true",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 23,
      "description": "<p>Whether this alert can be dismissed via the close button in the upper right\ncorner. Defaults to true. Adds an interactive close button to the alert.</p>\n<p><strong>Usage:</strong>\nOverride by passing <code>false</code> into this param in your handlebars template:</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#core<span class=\"token operator\">-</span>alert canDismiss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span> Standard template content goes here <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>core<span class=\"token operator\">-</span>alert<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n",
      "itemtype": "property",
      "name": "canDismiss",
      "type": "{boolean}",
      "default": "true",
      "access": "public",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-pages/class.js",
      "line": 15,
      "description": "<p>Class model content.</p>\n",
      "itemtype": "property",
      "name": "class",
      "type": "{?Object}",
      "passed": "",
      "class": "FountainHeadPages.Class",
      "srcFileId": "addon_components_fountainhead-pages_class.js"
    },
    {
      "file": "addon/components/cross-link.js",
      "line": 43,
      "description": "<p>Documentation Class to crosslink to.</p>\n",
      "itemtype": "property",
      "name": "class",
      "type": "{string}",
      "required": 1,
      "passed": "",
      "class": "CrossLink",
      "srcFileId": "addon_components_cross-link.js"
    },
    {
      "file": "addon/components/fountainhead-class/item.js",
      "line": 15,
      "description": "<p>Model backing this class item, generated by YUIDoc.\nTODO: Document props of classItem and how they get used in template</p>\n",
      "itemtype": "property",
      "name": "classItem",
      "type": "{Object}",
      "class": "FountainHead.Class.ClassItem",
      "srcFileId": "addon_components_fountainhead-class_item.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 78,
      "description": "<p>Handle binding brand and link related css class names</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-svg.js",
      "line": 44,
      "description": "<p>Bound classNames: <code>svgId</code></p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "FountainHead.Shared.CoreSVG",
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 93,
      "description": "<p>A set of dynamic classes whose output is bound to the associated values\non the component.</p>\n",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "access": "private",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 89,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-tabs-container']",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 36,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-sidebar']",
      "class": "FountainHead.Docs.Sidebar",
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 41,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-description']",
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 89,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array.<string>}",
      "default": "['fh-class-meta']",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 85,
      "description": "<p>Static class names applied to the component that must always exist. This\nreally should not need to be overridden or extended.</p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "access": "private",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-get-started.js",
      "line": 15,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-get-started']",
      "class": "FountainHead.Header"
    },
    {
      "file": "addon/components/fountainhead-class/header.js",
      "line": 34,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-page-header']",
      "class": "FountainHead.Class.Header",
      "srcFileId": "addon_components_fountainhead-class_header.js"
    },
    {
      "file": "addon/components/fountainhead-class/item.js",
      "line": 25,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-classitem']",
      "class": "FountainHead.Class.ClassItem",
      "srcFileId": "addon_components_fountainhead-class_item.js"
    },
    {
      "file": "addon/components/fountainhead-welcome.js",
      "line": 15,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-welcome']",
      "class": "FountainHead.Header",
      "srcFileId": "addon_components_fountainhead-welcome.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 74,
      "description": "<p>Class names: <code>tabs-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 69,
      "description": "<p>Bind standard core classname for component: <code>core-button</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 147,
      "description": "<p>Class names: <code>core-tabs</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-svg.js",
      "line": 38,
      "description": "<p>Class names: <code>core-svg</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "FountainHead.Shared.CoreSVG",
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 24,
      "description": "<p>Array of <em>ALL</em> items for this class. Used to find the type when an item is\nspecified in a query param.</p>\n",
      "itemtype": "property",
      "name": "classitems",
      "type": "{Array}",
      "default": "[]",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 47,
      "description": "<p>If there is a parsing error during the template compilation the catch block\nwill set it as the <code>compilerError</code>. This parsing error is rendered for\neasier debugging of invalid content.</p>\n",
      "itemtype": "property",
      "name": "compilerError",
      "type": "{?string}",
      "default": "null",
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 21,
      "description": "<p>The content string that should be rendered. This string is passed to the\nruntime compiler and registered as a partial if compilation is successful.</p>\n",
      "itemtype": "property",
      "name": "content",
      "type": "{string}",
      "default": "''",
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 95,
      "description": "<p>The panel that that the tabs should render on creation. The tabs component\ntracks this separately and it needs to be updated separately when a class\npage is loaded with an item query parameter.</p>\n",
      "itemtype": "property",
      "name": "defaultTab",
      "type": "{string}",
      "default": "'indexPanel'",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 100,
      "description": "<p>The optional elementId of the tab that should be shown by default. This is\nuseful for cases where the user has come into a page and is expecting one\nof the tabs to be shown by default.</p>\n",
      "itemtype": "property",
      "name": "defaultTab",
      "type": "{String}",
      "default": "''",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 29,
      "description": "<p>The string that should be converted to a partial</p>\n",
      "itemtype": "property",
      "name": "description",
      "type": "{string}",
      "default": "''",
      "deprecated": true,
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 160,
      "description": "<p>Whenever attrs are received fire the <code>_generateDescription</code> method to\ngenerate a partial that will be rendered.</p>\n",
      "itemtype": "event",
      "name": "didReceiveAttrs",
      "params": [
        {
          "name": "attrs",
          "description": "<p>Ember attrs object</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "newAttrs",
              "description": "The new attrs received",
              "type": "Object"
            }
          ]
        }
      ],
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-pages/module.js",
      "line": 24,
      "description": "<p>Handle nulling out properties <code>submodules</code> and <code>classes</code> if they don't have\nany keys.</p>\n",
      "itemtype": "event",
      "name": "didReceiveAttrs",
      "class": "FountainHead.Module",
      "srcFileId": "addon_components_fountainhead-pages_module.js"
    },
    {
      "file": "addon/routes/docs/modules.js",
      "line": 28,
      "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
      "itemtype": "event",
      "name": "didTransition",
      "class": "Docs.Modules",
      "srcFileId": "addon_routes_docs_modules.js"
    },
    {
      "file": "addon/routes/docs/classes.js",
      "line": 47,
      "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
      "itemtype": "event",
      "name": "didTransition",
      "class": "Docs.Classes",
      "srcFileId": "addon_routes_docs_classes.js"
    },
    {
      "file": "addon/routes/docs/files.js",
      "line": 28,
      "description": "<p>Reset page scroll on any transition. Note that Fountainhead is inside of\na fake page, so we scroll that instead of the body</p>\n",
      "itemtype": "event",
      "name": "didTransition",
      "class": "Docs.Files",
      "srcFileId": "addon_routes_docs_files.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 176,
      "description": "<p>Handle resetting tabs container to the index panel any time that this\ncomponent's attrs update. The only props passed in to this component are\nthe class items for the container, so we know if they change in any way\nthat this is the right time to update the tabs panel.</p>\n<p>NOTE: GUESS WHAT! This hook doens't only get called when passed props\nchange! There is some crazy behavior where this hook will get called ONCE\nand only ONCE when an internal property changes after the props for this\ncomponent has changed. Super weird. For now we're 'fixing' it by also\npassing in the class name and using that as a check to reset the <code>activeTab</code></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "params": [
        {
          "name": "attrs",
          "description": "<p>Object with <code>oldAttrs</code> and <code>newAttrs</code></p>\n",
          "type": "Object"
        }
      ],
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 136,
      "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 133,
      "description": "<p>A proxy action for the selfDestruct method</p>\n",
      "itemtype": "method",
      "name": "dismiss",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 71,
      "description": "<p>Method to filter on doc elements for search.</p>\n",
      "itemtype": "method",
      "name": "doFilter",
      "params": [
        {
          "name": "query",
          "description": "<p>The search query to filter on</p>\n",
          "type": "String"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "FountainHead.Docs.Sidebar",
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    {
      "file": "lib/generate-fountainhead-data.js",
      "line": 63,
      "description": "<p>The <code>docsMeta</code> object is the guide for the documentation data. It contains\ndescriptions of the project as well as arrays of module and class routing\ninformation</p>\n",
      "itemtype": "property",
      "name": "docsMeta",
      "type": "{Object}",
      "class": "generateFountainheadData",
      "module": "Lib",
      "srcFileId": "lib_generate-fountainhead-data.js"
    },
    {
      "file": "lib/decorate-config.js",
      "line": 21,
      "description": "<p>Configuration entry should be an array of directory paths (YUIDoc can't\nparse individual files unfortunately). The default entry is <code>app</code> when the\nconsumer is an application and <code>addon</code> when the consumer is an addon.</p>\n",
      "itemtype": "property",
      "name": "entry",
      "type": "{Array}",
      "default": "['app'] | ['addon']",
      "class": "decorateConfig",
      "module": "Lib",
      "srcFileId": "lib_decorate-config.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 32,
      "description": "<p>This class' array of event documentation items.</p>\n",
      "itemtype": "property",
      "name": "event",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 28,
      "description": "<p>The value property is set by using the <code>@extends</code> tag. Any class used in\nan extends tag will be linked to.</p>\n",
      "itemtype": "property",
      "name": "extends",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-pages/file.js",
      "line": 12,
      "description": "<p>JSON stringified file generated by documentation script.</p>\n",
      "itemtype": "property",
      "name": "file",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.File",
      "srcFileId": "addon_components_fountainhead-pages_file.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 36,
      "description": "<p>The file property matches where the documentation for a class is declared\nin the source files. It is set automatically.</p>\n",
      "itemtype": "property",
      "name": "file",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-svg.js",
      "line": 13,
      "description": "<p>File path to svg definitions file</p>\n",
      "itemtype": "property",
      "name": "filePath",
      "type": "{string}",
      "default": "assets/svg-defs.svg",
      "class": "FountainHead.Shared.CoreSVG",
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    {
      "file": "lib/index.js",
      "line": 34,
      "description": "<p>Optional configs pulled from <code>fountainhead.js</code></p>\n",
      "itemtype": "property",
      "name": "fountainheadConfig",
      "type": "{Object}",
      "class": "Index",
      "module": "Lib",
      "srcFileId": "lib_index.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 218,
      "description": "<p>Action bound to each documentation item in the index panel. Clicking any\nitem will trigger this with the documentation item as an argument. Use\nthe passed doc item to internally call\n{{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToItem'}}\nto scroll to clicked item.</p>\n",
      "itemtype": "method",
      "name": "goToItem",
      "action": "",
      "params": [
        {
          "name": "classitem",
          "description": "<p>Backing classitem</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "itemtype",
              "description": "Type for item of: `method`/`property`/`event`",
              "type": "String"
            },
            {
              "name": "name",
              "description": "Name for classitem",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 44,
      "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 118,
      "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
      "itemtype": "event",
      "name": "init",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 183,
      "description": "<p>When the component initializes, we set the <code>tabList</code> property to an array.\nThis prevents multiple instances of core-tabs on a given page from\ninheriting the same tabList array through prototype inheritance.</p>\n",
      "itemtype": "event",
      "name": "init",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 136,
      "description": "<p>On init we map the passed <code>contextActions</code> to real actions in this\ncomponent's actions hash to ensure they're available at compile time.</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 51,
      "description": "<p>When this service is loaded, handle fetching documentation meta data that\ndrives the sidebar &amp;&amp; header. If there is an error we know tha we haven't\ngenerated documentation yet. The docs template will pick up the error and\ndisplay the getting started instructions.</p>\n<p>NOTE: the meta request needs to be wrapped in a <code>run.next</code> so that if a\nconsuming application needs to override the <code>apiNamespace</code> the meta call\nis made with the new namespace. Without the run loop, attempting to set\nthe namespace will initialize this service and call for meta before the\nnamespace update is complete and the request will use the default <code>/docs</code>\nnamespace.</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/components/fountainhead-class/item.js",
      "line": 35,
      "description": "<p>Set the unique id that the <code>class-items-container</code> expects for each class\nitem in init. Id is the <code>itemtype_name</code> and is used to scroll to the\nitem when the name is clicked in the index list panel.</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "FountainHead.Class.ClassItem",
      "srcFileId": "addon_components_fountainhead-class_item.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 202,
      "description": "<p>Check for a passed <code>item</code> query param. When it exists call\n{{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToQueryParamItem'}}\nto scroll to that cross linked item.</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/cross-link.js",
      "line": 94,
      "description": "<p>Validate passed properties during init and warn if they're invalid. This\nprevents the component from creating an invalid <code>link-to</code>.</p>\n<p>Checks for a passed\n{{cross-link class='Crosslink' item='text'}} and sets default\ntext if unspecified</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "CrossLink",
      "srcFileId": "addon_components_cross-link.js"
    },
    {
      "file": "app/instance-initializers/fountainhead-routes.js",
      "line": 23,
      "description": "<p>Initialize route that is called by consuming Ember application\n<code>Router</code> instance from the consuming application can directly mapped.</p>\n",
      "itemtype": "method",
      "name": "initialize",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "FountainheadRoutes",
      "module": "App",
      "srcFileId": "app_instance-initializers_fountainhead-routes.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 40,
      "description": "<p>Item query param passed down from controller. When this property is present,\nor changes handle scrolling to the item. When the specified doc class is\nthe same but the item query param is different the model hooks will not be\ncalled, so we need to handle scrolling to the item when it changes.</p>\n",
      "itemtype": "property",
      "name": "item",
      "type": "{?string}",
      "default": "null",
      "passed": "",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/controllers/docs/classes.js",
      "line": 17,
      "description": "<p>Item query param is available for scrolling to a doc item.</p>\n",
      "itemtype": "property",
      "name": "item",
      "type": "{?string}",
      "default": "null",
      "class": "Docs.Classes",
      "srcFileId": "addon_controllers_docs_classes.js"
    },
    {
      "file": "addon/components/fountainhead-pages/class.js",
      "line": 22,
      "description": "<p>Item query param passed down from controller. Passed to the\n{{cross-link class='FountainheadClass.ItemsContainer' text='FountainheadClass.ItemsContainer'}}\ncomponent to scroll to linked item after load.</p>\n",
      "itemtype": "property",
      "name": "item",
      "type": "{?string}",
      "default": "null",
      "passed": "",
      "class": "FountainHeadPages.Class",
      "srcFileId": "addon_components_fountainhead-pages_class.js"
    },
    {
      "file": "addon/components/cross-link.js",
      "line": 51,
      "description": "<p>Class item to cross link to.\nas well.</p>\n",
      "itemtype": "property",
      "name": "item",
      "type": "{string}",
      "passed": "",
      "class": "CrossLink",
      "srcFileId": "addon_components_cross-link.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 96,
      "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>core-tabs</code> component.</p>\n",
      "itemtype": "property",
      "name": "label",
      "type": "{String}",
      "default": "''",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 52,
      "description": "<p>The line property matches the line where documentation for a class is\ndeclared in the source files. It is set automatically.</p>\n",
      "itemtype": "property",
      "name": "line",
      "type": "{?number}",
      "default": "null",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 25,
      "description": "<p>Pass true to create a button that looks and behaves like a link. This is\nuseful for creating accessible interaction targets.</p>\n",
      "itemtype": "property",
      "name": "link",
      "type": "{Boolean}",
      "default": "false",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 28,
      "description": "<p>Documentation meta fetched from <code>/meta.json</code>. Contains high level map\nof modules and classes available in documentation. Used for sidebar and\nmapping item and return types.\nThis property is initialized to null so that the sidebar has an explicit\nvalue to bind aria-hidden to. When there is no meta, there is no sidebar.</p>\n",
      "itemtype": "property",
      "name": "meta",
      "type": "{?Object}",
      "default": "null",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 18,
      "description": "<p>Fountainhead meta passed from service. Used to calculate <code>stringForAriaHidden</code>\nto hide sidebar when there is no data.</p>\n",
      "itemtype": "property",
      "name": "meta",
      "type": "{?Object}",
      "default": "null",
      "class": "FountainHead.Docs.Sidebar",
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 39,
      "description": "<p>Flag used by docs route to show getting started instructions if the call for\ndocumentation meta fails.</p>\n",
      "itemtype": "property",
      "name": "metaError",
      "type": "{Boolean}",
      "default": "false",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 51,
      "description": "<p>This class' array of method documentation items.</p>\n",
      "itemtype": "property",
      "name": "method",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "lib/create-dirs.js",
      "line": 19,
      "description": "<p>Synchronous mkdir that handles creating a potentially nested directory</p>\n",
      "itemtype": "method",
      "name": "mkdirSync",
      "params": [
        {
          "name": "dirPath",
          "description": "<p>Directory path to create, can be nested</p>\n",
          "type": "String"
        }
      ],
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "createDirs",
      "module": "Lib",
      "srcFileId": "lib_create-dirs.js"
    },
    {
      "file": "addon/routes/docs/modules.js",
      "line": 14,
      "description": "<p>Fetches modules's JSON at: <code>${this.get('fountainhead.apiNamespace')}/modules/${params.file_id}.json</code></p>\n",
      "itemtype": "method",
      "name": "model",
      "params": [
        {
          "name": "params",
          "description": null,
          "type": "Object",
          "props": [
            {
              "name": "module_id",
              "description": "Name of this class, use to fetch data",
              "type": "String"
            }
          ]
        }
      ],
      "return": {
        "description": "jQuery ajax promise",
        "type": "Promise"
      },
      "class": "Docs.Modules",
      "srcFileId": "addon_routes_docs_modules.js"
    },
    {
      "file": "addon/routes/docs/files.js",
      "line": 14,
      "description": "<p>Fetches file's JSON at: <code>${this.get('fountainhead.apiNamespace')}/files/${params.file_id}.json</code></p>\n",
      "itemtype": "method",
      "name": "model",
      "params": [
        {
          "name": "params",
          "description": null,
          "type": "Object",
          "props": [
            {
              "name": "file_id",
              "description": "Name of this class, use to fetch data",
              "type": "String"
            }
          ]
        }
      ],
      "return": {
        "description": "jQuery ajax promise",
        "type": "Promise"
      },
      "class": "Docs.Files",
      "srcFileId": "addon_routes_docs_files.js"
    },
    {
      "file": "addon/routes/docs/classes.js",
      "line": 17,
      "description": "<p>Fetches class' JSON at: <code>${this.get('fountainhead.apiNamespace')}/classes/${params.class_id}.json</code></p>\n",
      "itemtype": "method",
      "name": "model",
      "params": [
        {
          "name": "params",
          "description": null,
          "type": "Object",
          "props": [
            {
              "name": "class_id",
              "description": "Name of this class, use to fetch data",
              "type": "String"
            }
          ]
        }
      ],
      "return": {
        "description": "jQuery ajax promise",
        "type": "Promise"
      },
      "class": "Docs.Classes",
      "srcFileId": "addon_routes_docs_classes.js"
    },
    {
      "file": "addon/components/cross-link.js",
      "line": 59,
      "description": "<p>Documentation module to crosslink to.</p>\n",
      "itemtype": "property",
      "name": "module",
      "type": "{string}",
      "required": 1,
      "passed": "",
      "class": "CrossLink",
      "srcFileId": "addon_components_cross-link.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 44,
      "description": "<p>The module property is set by using the <code>@module</code> tag. Any module used in\na module tag will be linked to.</p>\n",
      "itemtype": "property",
      "name": "module",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-pages/module.js",
      "line": 13,
      "description": "<p>Module model content</p>\n",
      "itemtype": "property",
      "name": "module",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Module",
      "srcFileId": "addon_components_fountainhead-pages_module.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 105,
      "description": "<p>The <code>mouseDown</code> event is used for some utility/housekeeping methods because\nwe use the <code>click</code> event to pass in actions.</p>\n<p>Handle setting the outline on this element to <code>none</code> because we know this\nevent is only triggered by actual mouse clicks. Keyboard events don't trigger\nit, which is a convenient way to know we're good to hide the outline and\nmaintain usability for keyboard users. A++ accessibility!</p>\n<p>Handle checking for a tagging category and if one exists, fire a tag.</p>\n<p>If you need to override this event, be sure to call <code>this._super();</code></p>\n",
      "itemtype": "event",
      "name": "mouseDown",
      "return": {
        "description": "",
        "type": "Undefined"
      },
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 59,
      "description": "<p>Name of the class. Is checked in <code>didUpdateAttrs</code> to know if the tabs\nshould be reset to the index panel</p>\n",
      "itemtype": "property",
      "name": "name",
      "type": "{string}",
      "passed": "",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/header.js",
      "line": 23,
      "description": "<p>Name of the class. Is generated by the <code>@constructor</code> tag.</p>\n",
      "itemtype": "property",
      "name": "name",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Header",
      "srcFileId": "addon_components_fountainhead-class_header.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 109,
      "description": "<p>Optional closure action that will be called whenever a tab is opened with\nthe id of that tab. Use this to create a controlled tabs instance.</p>\n",
      "itemtype": "property",
      "name": "onChange",
      "type": "{function}",
      "default": "null",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 42,
      "description": "<p>Contains optional action that is executed when the alert is dismissed.\nThis action will be executed before the alert is destroyed.</p>\n",
      "itemtype": "property",
      "name": "onDismiss",
      "type": "{function}",
      "default": "() => {}",
      "access": "public",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "lib/decorate-config.js",
      "line": 29,
      "description": "<p>Configuration output path should be a directory path. The default is <code>public/docs</code>\nwhen the consumer is an application and <code>tests/dummy/public/docs</code> when the\nconsumer is an addon (Outputting the docs to <code>/public</code> in an addon signals\nEmber CLI to bundle your docs into any consuming applications <code>/public</code> dir\nwhich is not the default behavior we want).</p>\n",
      "itemtype": "property",
      "name": "outputPath",
      "type": "{string}",
      "default": "'public/docs' | 'tests/dummy/public/docs'",
      "class": "decorateConfig",
      "module": "Lib",
      "srcFileId": "lib_decorate-config.js"
    },
    {
      "file": "lib/index.js",
      "line": 39,
      "description": "<p>Package JSON for project. Used to populate project description if not\ndefined in <code>fountainhead.js</code> config.</p>\n",
      "itemtype": "property",
      "name": "packageJSON",
      "type": "{Object}",
      "class": "Index",
      "module": "Lib",
      "srcFileId": "lib_index.js"
    },
    {
      "file": "addon/components/fountainhead-runtime-description.js",
      "line": 56,
      "description": "<p>Name of generated partial that is used in the template.</p>\n",
      "itemtype": "property",
      "name": "partialName",
      "type": "{string}",
      "class": "Fountainhead.RuntimeDescription",
      "srcFileId": "addon_components_fountainhead-runtime-description.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 67,
      "description": "<p>This class' array of property documentation items.</p>\n",
      "itemtype": "property",
      "name": "property",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/controllers/docs/classes.js",
      "line": 11,
      "itemtype": "property",
      "name": "queryParams",
      "type": "{Array}",
      "default": "['item']",
      "class": "Docs.Classes",
      "srcFileId": "addon_controllers_docs_classes.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 230,
      "description": "<p>Closure action passed to content subcomponents that is called on init.\nEach child tab will register itself with this container. To ensure the\ntabList is only updated once per render, we proxy new tabs to the\n<code>_tabsToCreate</code> array and then push all of them to <code>tabList</code> using a\n<code>run.once</code> call to <code>_createTabsList</code></p>\n",
      "itemtype": "method",
      "name": "registerTab",
      "params": [
        {
          "name": "tab",
          "description": "<p>Object model of tab to be registered</p>\n",
          "type": "Object"
        }
      ],
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-repo-link.js",
      "line": 14,
      "description": "<p>Repository URL from fountainhead configurations. If a URL has been specified\nin the configs or the <code>package.json</code> this github logo will show with a link\nto the repo</p>\n",
      "itemtype": "property",
      "name": "repository",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Docs.Github",
      "srcFileId": "addon_components_fountainhead-repo-link.js"
    },
    {
      "file": "addon/routes/docs/classes.js",
      "line": 27,
      "description": "<p>We don't want the class <code>item</code> query param to be sticky. If it is, then you\ncan end up pre-scrolled to some previously crosslinked item when returning\nto a class.</p>\n<p>The <code>resetController</code> hook is called anytime a route's model changes or the\nroute is exited, and is the recommended time to reset query param values on\na controller.</p>\n",
      "itemtype": "method",
      "name": "resetController",
      "params": [
        {
          "name": "controller",
          "description": null,
          "type": "Object"
        },
        {
          "name": "isExiting",
          "description": null,
          "type": "Boolean"
        },
        {
          "name": "transition",
          "description": null,
          "type": "Object"
        }
      ],
      "class": "Docs.Classes",
      "srcFileId": "addon_routes_docs_classes.js"
    },
    {
      "file": "addon/components/fountainhead-alert.js",
      "line": 65,
      "description": "<p>A++ accessibility. Tells a screen this component is an alert.</p>\n",
      "itemtype": "property",
      "name": "role",
      "type": "{string}",
      "access": "private",
      "tagname": "",
      "class": "FountainHead.Shared.Alert",
      "srcFileId": "addon_components_fountainhead-alert.js"
    },
    {
      "file": "lib/generate-fountainhead-data.js",
      "line": 38,
      "description": "<p>Call to handle saving data to a file. Requires a file path and data to save.\nIf data is not a string, it will be stringified</p>\n",
      "itemtype": "method",
      "name": "saveObjectToJSON",
      "params": [
        {
          "name": "filePath",
          "description": "<p>Path to save file at</p>\n",
          "type": "String"
        },
        {
          "name": "data",
          "description": "<p>Data to save in file</p>\n",
          "type": "Object|string"
        }
      ],
      "return": {
        "description": "True for successful operation, false for failures",
        "type": "Boolean"
      },
      "class": "generateFountainheadData",
      "module": "Lib",
      "srcFileId": "lib_generate-fountainhead-data.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 117,
      "description": "<p>Whether the page should scroll the tab context back to the top when one of\nthe tabs is clicked. This can be a nice convenience for usabilitee.</p>\n",
      "itemtype": "property",
      "name": "scrollOnClick",
      "type": "{Boolean}",
      "default": "false",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 125,
      "description": "<p>What the target of the <code>scrollOnClick</code> behavior should be. By default,\nthe entire page/body scrolls, however if this instance of <code>core-tabs</code> is\ncontained within a modal or some other scrollable sub-container, it may\nbe more desirable to execute a scroll against that instead of the entire\npage. Simply pass a standard jQuery-like selector in as a string.</p>\n",
      "itemtype": "property",
      "name": "scrollTarget",
      "type": "{string}",
      "default": "'body, html'",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 208,
      "description": "<p>Action to show a tab. Set <code>activeId</code> to the passed elementId. <code>activeId</code>\nis passed down to children content components</p>\n",
      "itemtype": "method",
      "name": "showTab",
      "params": [
        {
          "name": "elementId",
          "description": "<p>HTML id of the tab to show</p>\n",
          "type": "String"
        }
      ],
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-class/header.js",
      "line": 16,
      "description": "<p>Src file id for this file. Used for link to for source.</p>\n",
      "itemtype": "property",
      "name": "srcFileId",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Header",
      "srcFileId": "addon_components_fountainhead-class_header.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 60,
      "description": "<p>scrFile id is set by the data scripts. It is a snake case version of the\nfile path and should be used for calling for the file</p>\n",
      "access": "private",
      "tagname": "",
      "itemtype": "property",
      "name": "srcFileId",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 52,
      "description": "<p>Fountainhead meta is passed into the sidebar. When there is no data, then\nwe haven't run the documentation scripts yet, so we need to hide the sidebar\nusing aria-hidden. Convert presence of meta data to string of boolean that\ncan be used for aria-hidden</p>\n",
      "itemtype": "property",
      "name": "stringForAriaHidden",
      "type": "{string}",
      "return": {
        "description": "Returns either string of `true` or `false` dependent on\n                 presence of meta",
        "type": "String"
      },
      "class": "FountainHead.Docs.Sidebar",
      "subprops": [
        {
          "name": "meta",
          "description": "Fountainhead meta passed from service",
          "type": "Object"
        }
      ],
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 69,
      "description": "<p>The submodule property is set by using the <code>@submodule</code> tag. Any submodule\nused in a submodule tag will be linked to.</p>\n",
      "itemtype": "property",
      "name": "submodule",
      "type": "{string}",
      "default": "''",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-svg.js",
      "line": 20,
      "description": "<p>The id of the svg.</p>\n",
      "itemtype": "property",
      "name": "svgId",
      "type": "{string}",
      "class": "FountainHead.Shared.CoreSVG",
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 105,
      "description": "<p>Use this attribute to place a custom data-test attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
      "itemtype": "property",
      "name": "tabDataTest",
      "type": "{string}",
      "class": "CoreTabs.Content",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 153,
      "description": "<p>List of tabs to display. This is iterated through in the template to\nrendered the buttons that are used to change tabs.</p>\n",
      "itemtype": "property",
      "name": "tabList",
      "type": "{Array.<Object>}",
      "default": "null",
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 233,
      "description": "<p>Closure action passed into the tab component. This action is called\nwhenever a tab is clicked with the id of the tab. Use this to update the\ncontrolling <code>activeTab</code> property for the tabs DDAU style.</p>\n",
      "itemtype": "method",
      "name": "tabsChanged",
      "action": "",
      "params": [
        {
          "name": "tab",
          "description": "<p>Backing object for a given tab</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "elementId",
              "description": "The id of the tab, controls current tab displayed",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainHeadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/cross-link.js",
      "line": 84,
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "''",
      "class": "CrossLink",
      "srcFileId": "addon_components_cross-link.js"
    },
    {
      "file": "addon/components/fountainhead-sidebar/sidebar.js",
      "line": 42,
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'nav'",
      "class": "FountainHead.Docs.Sidebar",
      "srcFileId": "addon_components_fountainhead-sidebar_sidebar.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 95,
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'div'",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "addon/components/fountainhead-svg.js",
      "line": 50,
      "description": "<p>SVG DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "FountainHead.Shared.CoreSVG",
      "srcFileId": "addon_components_fountainhead-svg.js"
    },
    {
      "file": "addon/components/fountainhead-class/header.js",
      "line": 40,
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'h2'",
      "class": "FountainHead.Class.Header",
      "srcFileId": "addon_components_fountainhead-class_header.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 87,
      "description": "<p>Button DOM element</p>\n",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "default": "'button'",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/cross-link.js",
      "line": 67,
      "description": "<p>Anchor text for generated <code>link-to</code>. You can pass specific text if needed,\notherwise default text is generated:</p>\n<h4>Defaults:</h4>\n<ul>\n<li>if module: <em>MODULE_NAME Module</em></li>\n<li>if class: <em>CLASS_NAME Class</em></li>\n<li>if class &amp;&amp; item: <em>CLASS_NAME:ITEM_NAME Class</em></li>\n</ul>\n",
      "itemtype": "property",
      "name": "text",
      "type": "{string}",
      "passed": "",
      "class": "CrossLink",
      "srcFileId": "addon_components_cross-link.js"
    },
    {
      "file": "addon/components/fountainhead-button.js",
      "line": 94,
      "description": "<p>Include type button for usability.</p>\n",
      "itemtype": "property",
      "name": "type",
      "type": "{string}",
      "default": "'button'",
      "class": "FountainHead.Shared.Button",
      "srcFileId": "addon_components_fountainhead-button.js"
    },
    {
      "file": "addon/components/fountainhead-tabs.js",
      "line": 244,
      "description": "<p>Closure action passed to content subcomponents that is called whenever\na tab has updated in a way this container needs to know of. Currently\nthis is only when a tab's <code>hidden</code> status changes.</p>\n",
      "itemtype": "method",
      "name": "updateTab",
      "params": [
        {
          "name": "tab",
          "description": null,
          "type": "Object",
          "props": [
            {
              "name": "elementId",
              "description": "HTML id of tab to update",
              "type": "String"
            },
            {
              "name": "hidden",
              "description": "Hidden status of changed tab",
              "type": "Boolean"
            }
          ]
        }
      ],
      "class": "CoreTabs",
      "srcFileId": "addon_components_fountainhead-tabs.js"
    },
    {
      "file": "addon/components/fountainhead-class/meta.js",
      "line": 77,
      "description": "<p>The uses array is set by using one or more <code>@uses</code> tags. Any class used in\na uses tag will be linked to.</p>\n",
      "itemtype": "property",
      "name": "uses",
      "type": "{Array}",
      "default": "[]",
      "class": "FountainHead.Class.Meta",
      "srcFileId": "addon_components_fountainhead-class_meta.js"
    },
    {
      "file": "lib/index.js",
      "line": 68,
      "description": "<p>Raw YUIDoc JSON data generated using constructor exported by <code>yuidocjs</code>.\nCall new with options from config to pass configs to YUIDoc and call <code>run</code>\nto generate JSON</p>\n",
      "itemtype": "property",
      "name": "yuidocJSON",
      "type": "{Object}",
      "class": "Index",
      "module": "Lib",
      "srcFileId": "lib_index.js"
    }
  ],
  "warnings": [
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-class/items-container.js:32"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-class/items-container.js:40"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-class/items-container.js:51"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-class/items-container.js:59"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-class/items-container.js:67"
    },
    {
      "message": "unknown tag: action",
      "line": " addon/components/fountainhead-class/items-container.js:218"
    },
    {
      "message": "unknown tag: action",
      "line": " addon/components/fountainhead-class/items-container.js:233"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-pages/class.js:15"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/fountainhead-pages/class.js:22"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/cross-link.js:43"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/cross-link.js:51"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/cross-link.js:59"
    },
    {
      "message": "unknown tag: passed",
      "line": " addon/components/cross-link.js:67"
    },
    {
      "message": "replacing incorrect tag: returns with return",
      "line": " addon/components/fountainhead-button.js:105"
    },
    {
      "message": "replacing incorrect tag: returns with return",
      "line": " addon/components/fountainhead-tabs-content.js:80"
    }
  ]
}