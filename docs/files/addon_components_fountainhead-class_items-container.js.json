{
  "file": "addon/components/fountainhead-class/items-container.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> hbs <span class=\"token keyword\">from</span> <span class=\"token string\">'htmlbars-inline-precompile'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> $ <span class=\"token keyword\">from</span> <span class=\"token string\">'jquery'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> scheduleOnce <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-runloop'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-metal/get'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * Tab container for the class' documentation items. Component handles running\n * a controlled instance of `core-tabs` by tracking `activeTab` internally and\n * passing `tabsChanged` to the `core-tabs` instance.\n *\n * The active tab is reset to the index panel anytime that the `name` (of the\n * class) changes.\n *\n * @class FountainHeadClass.ItemsContainer\n * @constructor\n * @extends Ember.Component\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Passed Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Array of *ALL* items for this class. Used to find the type when an item is\n   * specified in a query param.\n   * @property classitems\n   * @type {Array}\n   * @default []\n   */</span>\n  classitems<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * This class' array of event documentation items.\n   * @property event\n   * @type {Array}\n   * @default []\n   * @passed\n   */</span>\n  event<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Item query param passed down from controller. When this property is present,\n   * or changes handle scrolling to the item. When the specified doc class is\n   * the same but the item query param is different the model hooks will not be\n   * called, so we need to handle scrolling to the item when it changes.\n   * @property item\n   * @type {?string}\n   * @default null\n   * @passed\n   */</span>\n  item<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * This class' array of method documentation items.\n   * @property method\n   * @type {Array}\n   * @default []\n   * @passed\n   */</span>\n  method<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Name of the class. Is checked in `didUpdateAttrs` to know if the tabs\n   * should be reset to the index panel\n   * @property name\n   * @type {string}\n   * @passed\n   */</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * This class' array of property documentation items.\n   * @property property\n   * @type {Array}\n   * @default []\n   * @passed\n   */</span>\n  property<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * The currently active tab. This is controlled by this component to allow\n   * us to change the tab whenever a documentation item is clicked in the index\n   * panel.\n   * @property activeTab\n   * @type {string}\n   * @protected\n   * @default indexPanel\n   */</span>\n  activeTab<span class=\"token punctuation\">:</span> <span class=\"token string\">'indexPanel'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * @property classNames\n   * @type {Array}\n   * @default ['fh-tabs-container']\n   */</span>\n  classNames<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'fh-tabs-container'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * The panel that that the tabs should render on creation. The tabs component\n   * tracks this separately and it needs to be updated separately when a class\n   * page is loaded with an item query parameter.\n   * @property defaultTab\n   * @type {string}\n   * @default 'indexPanel'\n   */</span>\n  defaultTab<span class=\"token punctuation\">:</span> <span class=\"token string\">'indexPanel'</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Methods</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Internal method to handle selecting a tab panel and then scrolling to an\n   * item in that panel.\n   *\n   * Method will:\n   * - Change to the panel matching the doc item type\n   * - Scroll to that item using the itemtype and name to construct the DOM id\n   * @method _scrollToItem\n   * @protected\n   * @param {Object} classitem          Backing class item\n   * @param {string} classitem.itemtype Type for item of: `method`/`property`/`event`\n   * @param {string} classitem.name     Name of item\n   */</span>\n  <span class=\"token function\">_scrollToItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> itemtype<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">/*\n     * Named function for scrolling to selected item after the tab change has\n     * been rendered. VERY IMPORTANT: Fountainhead is rendered inside of a\n     * fake wrapper page, so we have to scroll that wrapper page instead of\n     * the body. We also need to get the current scrollTop of that containing\n     * wrapper before adding the new scrollTop, b/c we're really just scrolling\n     * that div\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> scrollTop <span class=\"token operator\">=</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.fh-page-in-page-wrapper'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scrollTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">// Current scrolltop</span>\n        <span class=\"token operator\">+</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>itemtype<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token comment\" spellcheck=\"true\">// Offset to desired element</span>\n        <span class=\"token operator\">-</span> <span class=\"token number\">75</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Minus a little for an easier visual transition</span>\n\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.fh-page-in-page-wrapper'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> scrollTop <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Change to the selected tab using the itemtype to build the tab's id</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activeTab'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>itemtype<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">Panel`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// We can't scroll until after the next render has udpated the current tab</span>\n    <span class=\"token function\">scheduleOnce</span><span class=\"token punctuation\">(</span><span class=\"token string\">'afterRender'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> scrollTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handles finding the classitem model using the `item` query param value.\n   * If a classitem is found, initiate a scroll.\n   * @method _scrollToQueryParamItem\n   * @protected\n   * @param {!string} item The item query param identifying which classitem to scroll to\n   */</span>\n  <span class=\"token function\">_scrollToQueryParamItem</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Find specific classitem data in complete classitems array</span>\n    <span class=\"token keyword\">let</span> targetItem <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'classitems'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>classitem <span class=\"token operator\">=</span><span class=\"token operator\">></span> classitem<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Only attempt to scroll to item if we found it</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetItem<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      targetItem <span class=\"token operator\">=</span> targetItem<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">/*\n       * This is only required on the first load of the tabs, but there isn't\n       * an easy way to track that and it's ok to set it every time b/c the tabs\n       * only uses it in the `init` hook. Setting this ensures that the first\n       * time the tabs renders the passed `defaultTab` matches the passed\n       * `activeTab`. If these don't match the first render of the tabs is blank.\n       */</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'defaultTab'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>targetItem<span class=\"token punctuation\">.</span>itemtype<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">Panel`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\" spellcheck=\"true\">// The `targetItem` structure matches expected `itemtype` and `name` of `_scrollToItem`</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_scrollToItem</span><span class=\"token punctuation\">(</span>targetItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Hooks</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handle resetting tabs container to the index panel any time that this\n   * component's attrs update. The only props passed in to this component are\n   * the class items for the container, so we know if they change in any way\n   * that this is the right time to update the tabs panel.\n   *\n   * NOTE: GUESS WHAT! This hook doens't only get called when passed props\n   * change! There is some crazy behavior where this hook will get called ONCE\n   * and only ONCE when an internal property changes after the props for this\n   * component has changed. Super weird. For now we're 'fixing' it by also\n   * passing in the class name and using that as a check to reset the `activeTab`\n   * @event didUpdateAttrs\n   * @param {Object} attrs Object with `oldAttrs` and `newAttrs`\n   */</span>\n  <span class=\"token function\">didUpdateAttrs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> oldAttrs<span class=\"token punctuation\">,</span> newAttrs <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_super</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> item <span class=\"token operator\">=</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>newAttrs<span class=\"token punctuation\">,</span> <span class=\"token string\">'item.value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>oldAttrs<span class=\"token punctuation\">,</span> <span class=\"token string\">'item.value'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>newAttrs<span class=\"token punctuation\">,</span> <span class=\"token string\">'item.value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_scrollToQueryParamItem</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>oldAttrs<span class=\"token punctuation\">,</span> <span class=\"token string\">'name.value'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>newAttrs<span class=\"token punctuation\">,</span> <span class=\"token string\">'name.value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activeTab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'indexPanel'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Check for a passed `item` query param. When it exists call\n   * {{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToQueryParamItem'}}\n   * to scroll to that cross linked item.\n   * @method init\n   */</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_super</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_scrollToQueryParamItem</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Actions</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">/**\n     * Action bound to each documentation item in the index panel. Clicking any\n     * item will trigger this with the documentation item as an argument. Use\n     * the passed doc item to internally call\n     * {{cross-link class='FountainHeadClass.ItemsContainer' item='_scrollToItem'}}\n     * to scroll to clicked item.\n     * @method goToItem\n     * @action\n     * @param {Object} classitem          Backing classitem\n     * @param {string} classitem.itemtype Type for item of: `method`/`property`/`event`\n     * @param {string} classitem.name     Name for classitem\n     */</span>\n    <span class=\"token function\">goToItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> itemtype<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_scrollToItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> itemtype<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/**\n     * Closure action passed into the tab component. This action is called\n     * whenever a tab is clicked with the id of the tab. Use this to update the\n     * controlling `activeTab` property for the tabs DDAU style.\n     * @method tabsChanged\n     * @action\n     * @param {Object} tab           Backing object for a given tab\n     * @param {string} tab.elementId The id of the tab, controls current tab displayed\n     */</span>\n    <span class=\"token function\">tabsChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> elementId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activeTab'</span><span class=\"token punctuation\">,</span> elementId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Layout</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  layout<span class=\"token punctuation\">:</span> hbs<span class=\"token template-string\"><span class=\"token string\">`\n    {{#fountainhead-tabs\n      defaultTab=defaultTab\n      activeId=activeTab\n      onChange=(action 'tabsChanged')\n      as |components|}}\n      {{! --------------------------------------------------------------------- }}\n      {{! Index Tab - Links to Items\n      {{! --------------------------------------------------------------------- }}\n      {{#components.content label='Index' elementId='indexPanel'}}\n        {{#if method.length}}\n          &lt;h4 class='fh-docs-category uppercase'>Methods&lt;/h4>\n          &lt;ul class='fh-index-list'>\n            {{#each method as |method|}}\n              &lt;li class='fh-index-item'>\n                {{#fountainhead-button link=true click=(action 'goToItem' method)}}\n                  {{method.name}}\n                {{/fountainhead-button}}\n              &lt;/li>\n            {{/each}}\n          &lt;/ul>\n        {{/if}}\n\n        {{#if property.length}}\n          &lt;h4 class='fh-docs-category uppercase'>Properties&lt;/h4>\n          &lt;ul class='fh-index-list'>\n            {{#each property as |property|}}\n              &lt;li class='fh-index-item'>\n                {{#fountainhead-button link=true click=(action 'goToItem' property)}}\n                  {{property.name}}\n                {{/fountainhead-button}}\n              &lt;/li>\n            {{/each}}\n          &lt;/ul>\n        {{/if}}\n\n        {{#if event.length}}\n          &lt;h4 class='fh-docs-category uppercase'>Events&lt;/h4>\n          &lt;ul class='fh-index-list'>\n            {{#each event as |event|}}\n              &lt;li class='fh-index-item'>\n                {{#fountainhead-button link=true click=(action 'goToItem' event)}}\n                  {{event.name}}\n                {{/fountainhead-button}}\n              &lt;/li>\n            {{/each}}\n          &lt;/ul>\n        {{/if}}\n      {{/components.content}}\n\n      {{! --------------------------------------------------------------------- }}\n      {{! Method/Property/Event Panels\n      {{! --------------------------------------------------------------------- }}\n      {{#components.content label='Methods' hidden=(eq method.length 0) elementId='methodPanel'}}\n        {{#each method as |method|}}\n          {{fountainhead-class/item classItem=method}}\n        {{/each}}\n      {{/components.content}}\n      {{#components.content label='Properties' hidden=(eq property.length 0) elementId='propertyPanel'}}\n        {{#each property as |property|}}\n          {{fountainhead-class/item classItem=property}}\n        {{/each}}\n      {{/components.content}}\n      {{#components.content label='Events' hidden=(eq event.length 0) elementId='eventPanel'}}\n        {{#each event as |event|}}\n          {{fountainhead-class/item classItem=event}}\n        {{/each}}\n      {{/components.content}}\n    {{/fountainhead-tabs}}\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>"
}