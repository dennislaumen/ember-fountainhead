{
  "file": "blueprints/ember-fountainhead/index.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> EOL <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'os'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>EOL<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * When an addon has an `index.js` file under `/blueprints/ADDON_NAME`, Ember\n * CLI will call the hooks defined there. We use this to handle anything that\n * needs to be updated in the consuming application only once during the addon\n * setup.\n * @module Blueprints\n */</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * Fountainhead index blueprint is used to update the consuming application's\n * `.gitignore` to ignore the auto generated `vendor/feature-flags.js` file\n * created by `ember-radical`. This file is used to create global variables if\n * the consuming application has turned off JSUglify code stripping.\n * @class EmberFountainhead.Index\n * @constructor\n * @extends EmberCLI.Blueprint\n */</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  normalizeEntityName<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// this prevents an error when the entityName is</span>\n    <span class=\"token comment\" spellcheck=\"true\">// not specified (since that doesn't actually matter</span>\n    <span class=\"token comment\" spellcheck=\"true\">// to us</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Add an ignore for generated vendor feature flags</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * After install of addon read in consuming application's gitignore. If there\n   * isn't an entry for `vendor/feature-flags.js`, use node `fs` to append it.\n   * @method afterInstall\n   * @return {undefined}\n   */</span>\n  <span class=\"token function\">afterInstall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Thanks for installing Ember Fountainhead</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>EOL<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">You can run 'ember-docs' to generate you documentation`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>"
}