{
  "file": "addon/services/fountainhead.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token keyword\">import</span> Ember <span class=\"token keyword\">from</span> <span class=\"token string\">'ember'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Service <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> $ <span class=\"token keyword\">from</span> <span class=\"token string\">'jquery'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ActionHandler <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Ember<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * The Fountainhead service handles fetching the meta data for Fountainhead.\n * This is triggered in the `beforeModel` of either the `docs` or `guides`\n * route.\n *\n * The namespace that all API request fire with is defined as `apiNamespace`.\n * If you need to route requests under a different namespace it can be udpated.\n * @class Fountainhead\n * @constructor\n * @extends Ember.Service\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Service<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>ActionHandler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * All Fountainhead API requests are prefixed with this namespace. If you\n   * export your docs JSON files to a non-default location, or your application\n   * is served under a namespace you can overwrite this property to match your\n   * endpoint's root url namespace.\n   * @property apiNamespace\n   * @type {string}\n   * @public\n   * @default '/docs'\n   */</span>\n  apiNamespace<span class=\"token punctuation\">:</span> <span class=\"token string\">'/docs'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Documentation meta fetched from `/meta.json`. Contains high level map\n   * of modules and classes available in documentation. Used for sidebar and\n   * mapping item and return types.\n   * This property is initialized to null so that the sidebar has an explicit\n   * value to bind aria-hidden to. When there is no meta, there is no sidebar.\n   * @property meta\n   * @type {?Object}\n   * @default null\n   */</span>\n  meta<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Flag used by docs route to show getting started instructions if the call for\n   * documentation meta fails.\n   * @property metaError\n   * @type {Boolean}\n   * @public\n   * @default false\n   */</span>\n  metaError<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Methods</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Fires request for documentation meta data and returns the promise. This\n   * method is called in the `beforeModel` of either the `docs` or `guides`\n   * route, whichever is entered first.\n   *\n   * NOTE: If the request fails service property {{cross-link item='metaError'}}\n   * will be set to `true`.\n   * @method fetchMeta\n   * @protected\n   * @return {Promise}\n   */</span>\n  <span class=\"token function\">fetchMeta</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'apiNamespace'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/meta.json`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n      meta <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">,</span> meta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      err <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'metaError'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>"
}