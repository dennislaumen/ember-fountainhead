{
  "file": "addon/services/fountainhead.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token keyword\">import</span> Ember <span class=\"token keyword\">from</span> <span class=\"token string\">'ember'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Service <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-service'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> $ <span class=\"token keyword\">from</span> <span class=\"token string\">'jquery'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ActionHandler <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Ember<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * Fountainhead application service.\n * @class Fountainhead\n * @constructor\n * @extends Ember.Service\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Service<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>ActionHandler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Documentation meta fetched from `/docs/meta.json`. Contains high level map\n   * of modules and classes available in documentation. Used for sidebar and\n   * mapping item and return types.\n   * This property is initialized to null so that the sidebar has an explicit\n   * value to bind aria-hidden to. When there is no meta, there is no sidebar.\n   * @property meta\n   * @type {?Object}\n   * @default null\n   */</span>\n  meta<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Flag used by docs route to show getting started instructions if the call for\n   * documentation meta fails.\n   * @property metaError\n   * @type {Boolean}\n   * @default false\n   */</span>\n  metaError<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Hooks</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * When this service is loaded, handle fetching documentation meta data that\n   * drives the sidebar &amp;&amp; header. If there is an error we know tha we haven't\n   * generated documentation yet. The docs template will pick up the error and\n   * display the getting started instructions.\n   * @method init\n   */</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/docs/meta.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n      meta <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">,</span> meta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      err <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'metaError'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>"
}