{
  "file": "addon/components/cross-link.js",
  "content": "<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript}\"><span aria-hidden=\"true\" role=\"presentation\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> getOwner <span class=\"token keyword\">from</span> <span class=\"token string\">'ember-owner/get'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> hbs <span class=\"token keyword\">from</span> <span class=\"token string\">'htmlbars-inline-precompile'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n * The `{{cross-link}}` component lets you easily reference other classes,\n * modules, properties and methods in your documentation.\n *\n * #### Example\n * ```glimmer\n * Check out {{cross-link class='FountainheadClass.Meta' item='access'}}\n * ```\n * When used as an inline component, the rendered link-to's text will be the\n * ID of the module or class along with any passed query params. If you want\n * different link text you can use the component in block form.\n *\n * ```glimmer\n * {{#cross-link class='FountainheadClass.Meta' item='access'}}\n *   Check out the FountainheadClass.Meta components access property\n * {{/cross-link}}\n * ```\n *\n * #### Positional Params\n * The component can also be used with positional parameters when referencing a\n * property or method on the same class.\n * ```glimmer\n * Check out this components init method: {{cross-link 'init'}}\n * ```\n *\n * #### Alternate Invocation\n * For _maximum_ terseness Fountainhead also exports the cross link component as\n * `{{c-l}}`\n * ```glimmer\n * Check out this components init method: {{c-l 'init'}}\n * ```\n *\n * Property | Description\n * --- | ---\n * `class` | Documentation class to link to\n * `module` | Documentation module to link to\n * `item` | Specific documentation item to link to, appended as a query param\n *\n * {{! --------------------------------------------------------------------- }}\n * {{! TEST CASES: B/c Ember Integration Tests + link-to === ðŸ’£              }}\n * {{! Uncomment cases below and check in browser                            }}\n * {{! --------------------------------------------------------------------- }}\n * {{! Postional Params }}\n * {{!-- {{c-l 'init'}}&lt;br> --}}\n * {{!-- {{#c-l 'init'}}BLOCK TEXT{{/c-l}}&lt;br> --}}\n * {{! Passed Item }}\n * {{!-- {{c-l item='init'}}&lt;br> --}}\n * {{!-- {{#c-l item='init'}}BLOCK TEXT{{/c-l}}&lt;br> --}}\n * {{! Passed Module }}\n * {{!-- {{c-l module='Addon'}}&lt;br> --}}\n * {{!-- {{#c-l module='Addon'}}ADDON MODULE{{/c-l}}&lt;br> --}}\n * {{! Passed Class }}\n * {{!-- {{c-l class='CrossLink' item='init'}} &lt;br> --}}\n * {{!-- {{#c-l class='CrossLink' item='init'}}BLOCK TEXT{{/c-l}}&lt;br> --}}\n * {{!-- {{c-l class='FountainheadWelcome'}}&lt;br> --}}\n * {{!-- {{c-l class='FountainheadWelcome' item='classNames'}}&lt;br> --}}\n * {{!-- {{#c-l class='FountainheadWelcome' item='classNames'}}BLOCK TEXT{{/c-l}}&lt;br> --}}\n *\n * @class CrossLink\n * @constructor\n * @extends Ember.Component\n */</span>\n<span class=\"token keyword\">const</span> CrossLink <span class=\"token operator\">=</span> Component<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Passed Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Documentation Class to crosslink to.\n   * @property class\n   * @type {?string}\n   * @passed\n   */</span>\n  <span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Optionally specify an item (property/method) to cross link to on a class.\n   * @property item\n   * @type {?string}\n   * @passed\n   */</span>\n  item<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Documentation module to crosslink to.\n   * @property module\n   * @type {?string}\n   * @passed\n   */</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Properties</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Computed route passed to rendered `link-to` defined in {{c-l 'init'}}\n   * @property _route\n   * @type {?string}\n   * @private\n   */</span>\n  _route<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Computed model ID passed to rendered `link-to` defined in {{c-l 'init'}}\n   * @property _modelID\n   * @type {?string}\n   * @private\n   */</span>\n  _modelID<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * @property tagName\n   * @type {string}\n   * @default ''\n   */</span>\n  tagName<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Hooks</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  <span class=\"token comment\" spellcheck=\"true\">/**\n   * Handle picking the link to route and model id based on presence of passed\n   * properties. If a module or class is not passed look up the current route\n   * and model id on the router.\n   * @method init\n   */</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_super</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> currentRouteName<span class=\"token punctuation\">,</span> currentModelId<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> item<span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> _class <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'module'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Handle assigning internal route and model id props based on presence of</span>\n    <span class=\"token comment\" spellcheck=\"true\">// passed attributes. Lookup on router if not passed</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>module <span class=\"token operator\">||</span> _class<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        _route<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`api.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>module <span class=\"token operator\">?</span> <span class=\"token string\">'modules'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'classes'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n        _model<span class=\"token punctuation\">:</span> module <span class=\"token operator\">||</span> _class\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      currentRouteName <span class=\"token operator\">=</span> <span class=\"token function\">getOwner</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token string\">'router:main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'currentRouteName'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      currentModelId <span class=\"token operator\">=</span> <span class=\"token function\">getOwner</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`route:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentRouteName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'currentModel.name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        _route<span class=\"token punctuation\">:</span> currentRouteName<span class=\"token punctuation\">,</span>\n        _model<span class=\"token punctuation\">:</span> currentModelId\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Handle assigning anchor text in case block params weren't used</span>\n    text <span class=\"token operator\">=</span> module <span class=\"token operator\">||</span> _class <span class=\"token operator\">||</span> currentModelId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> text <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// Layout</span>\n  <span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------</span>\n  layout<span class=\"token punctuation\">:</span> hbs<span class=\"token template-string\"><span class=\"token string\">`\n    {{#link-to _route _model (query-params item=item)}}\n      {{#if hasBlock}}\n        {{yield}}\n      {{else}}\n        {{text}}\n      {{/if}}\n    {{/link-to}}\n  `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// SOME SWEET MAGIC TO ALLOW US TO USE POSITIONAL PARAMS WITH COMPONENT</span>\nCrossLink<span class=\"token punctuation\">.</span><span class=\"token function\">reopenClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  positionalParams<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'item'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> CrossLink<span class=\"token punctuation\">;</span>\n</code></pre>"
}