{
  "name": "FountainheadTabsContent",
  "shortname": "FountainheadTabsContent",
  "classitems": [
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 83,
      "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
      "itemtype": "property",
      "name": "_hidden",
      "return": {
        "description": "String of true/false for use with `aria-hidden` binding",
        "type": "String"
      },
      "class": "FountainheadTabsContent",
      "subprops": [
        {
          "name": "activeId",
          "description": "",
          "type": "String"
        },
        {
          "name": "hidden",
          "description": "",
          "type": "Boolean"
        }
      ],
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 38,
      "description": "<p>The id of the currently active tab in the scope of the\n<code>fountainhead-tabs</code> component. This is provided privately in the\n<code>fountainhead-tabs</code> yield hash.</p>\n",
      "itemtype": "property",
      "name": "activeId",
      "type": "{String}",
      "default": "''",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 62,
      "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
      "itemtype": "property",
      "name": "ariaRole",
      "type": "{string}",
      "default": "tabpanel",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 69,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 77,
      "description": "<p>Class names: <code>tabs-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 139,
      "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 47,
      "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 121,
      "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
      "itemtype": "event",
      "name": "init",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 99,
      "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>fountainhead-tabs</code> component.</p>\n",
      "itemtype": "property",
      "name": "label",
      "type": "{String}",
      "default": "''",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 108,
      "description": "<p>Use this attribute to place a custom data-test attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
      "itemtype": "property",
      "name": "tabDataTest",
      "type": "{string}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    }
  ],
  "plugins": [],
  "extensions": [],
  "plugin_for": [],
  "extension_for": [],
  "module": "Addon",
  "file": "addon/components/fountainhead-tabs-content.js",
  "line": 7,
  "description": "<p>This component is yielded by the <code>fountainhead-tabs</code> component. The <code>activeId</code> and\nactions <code>registerTab</code> and <code>updateTab</code> are privately bound for internal use.</p>\n<p>On init each tab will register itself with the <code>fountainhead-tabs</code> wrapping container,\npassing all its data. The <code>fountainhead-tabs</code> container uses this to build out the\ntab buttons.</p>\n<pre class=\"language-handlebars\"><code class=\"language-handlebars\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#fountainhead<span class=\"token operator\">-</span>tabs defaultTab<span class=\"token operator\">=</span><span class=\"token string\">\"dumpsterShrimp\"</span> <span class=\"token keyword\">as</span> <span class=\"token operator\">|</span>components<span class=\"token operator\">|</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>#components<span class=\"token punctuation\">.</span>content label<span class=\"token operator\">=</span><span class=\"token string\">\"Shrimp\"</span> elementId<span class=\"token operator\">=</span><span class=\"token string\">\"dumpsterShrimp\"</span> tabDataTest<span class=\"token operator\">=</span><span class=\"token string\">\"a-nifty-tab-button\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    BRINGO<span class=\"token operator\">!</span> There<span class=\"token string\">'s some pretty good lil'</span> shrimpers <span class=\"token keyword\">in</span> here<span class=\"token punctuation\">,</span> lets check it out<span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>components<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token operator\">/</span>fountainhead<span class=\"token operator\">-</span>tabs<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Configuration</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>label</code></td>\n<td>string</td>\n<td>null</td>\n<td>Text label of the tab button for this panel</td>\n</tr>\n<tr>\n<td><code>elementId</code></td>\n<td>string</td>\n<td>null</td>\n<td>Set a specific id for this component when using container <code>defaultTab</code></td>\n</tr>\n<tr>\n<td><code>tabDataTest</code></td>\n<td>string</td>\n<td>null</td>\n<td><code>data-test</code> for the tab button</td>\n</tr>\n</tbody>\n</table>\n",
  "is_constructor": 1,
  "extends": "Ember.Component",
  "method": [],
  "property": [
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 83,
      "description": "<p>Computed <code>_hidden</code> accounts for whether the tab is selected (by checking\n<code>activeId</code>) &amp;&amp; if this tab has been flagged to be hidden with property\n<code>hidden</code></p>\n",
      "itemtype": "property",
      "name": "_hidden",
      "return": {
        "description": "String of true/false for use with `aria-hidden` binding",
        "type": "String"
      },
      "class": "FountainheadTabsContent",
      "subprops": [
        {
          "name": "activeId",
          "description": "",
          "type": "String"
        },
        {
          "name": "hidden",
          "description": "",
          "type": "Boolean"
        }
      ],
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 38,
      "description": "<p>The id of the currently active tab in the scope of the\n<code>fountainhead-tabs</code> component. This is provided privately in the\n<code>fountainhead-tabs</code> yield hash.</p>\n",
      "itemtype": "property",
      "name": "activeId",
      "type": "{String}",
      "default": "''",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 62,
      "description": "<p>Aria role <code>tabpanel</code> is bound for A++ accessibility.</p>\n",
      "itemtype": "property",
      "name": "ariaRole",
      "type": "{string}",
      "default": "tabpanel",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 69,
      "description": "<p>Bound attributes:</p>\n<ul>\n<li><code>data-test</code>: for precise testing identification</li>\n<li><code>_hidden</code>: to hide this tab if it is not selected or if prop hidden is true</li>\n</ul>\n",
      "itemtype": "property",
      "name": "attributeBindings",
      "type": "{Array}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 77,
      "description": "<p>Class names: <code>tabs-content</code></p>\n",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 47,
      "description": "<p>Whether this tab should be hidden from view. Useful for situations where\na tab needs to exist in a particular place in the tab ordering but may\nnot have the data it needs to display information at the time when\n<code>registerTab</code> is invoked. This allows you to make sure your tab can be\nhidden while preserving its place in the list.</p>\n",
      "itemtype": "property",
      "name": "hidden",
      "type": "{Boolean}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 99,
      "description": "<p>The button label text of this tab. This will be passed up via a closure\naction to the containing <code>fountainhead-tabs</code> component.</p>\n",
      "itemtype": "property",
      "name": "label",
      "type": "{String}",
      "default": "''",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 108,
      "description": "<p>Use this attribute to place a custom data-test attribute on the tab button\nfor this tab. This will allow easier, specific/direct targeting of clicking\nthis tab in automated testing.</p>\n",
      "itemtype": "property",
      "name": "tabDataTest",
      "type": "{string}",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    }
  ],
  "event": [
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 139,
      "description": "<p>Actions Up: When something changes in this component we need to let the\ncontainer tabs know by firing the <code>updateTab</code> closure action with this\ntabs changed data.</p>\n<p><em>(Currently the only change we're notifying on is the <code>hidden</code> prop)</em></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    },
    {
      "file": "addon/components/fountainhead-tabs-content.js",
      "line": 121,
      "description": "<p>Handle registering with the tabs container on int by firing <code>registerTab</code>\nclosure action with this tab's data.</p>\n",
      "itemtype": "event",
      "name": "init",
      "class": "FountainheadTabsContent",
      "srcFileId": "addon_components_fountainhead-tabs-content.js"
    }
  ],
  "srcFileId": "addon_components_fountainhead-tabs-content.js"
}