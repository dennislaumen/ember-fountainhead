{
  "name": "FountainheadClass.ItemsContainer",
  "shortname": "FountainheadClass.ItemsContainer",
  "classitems": [
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 108,
      "description": "<p>Internal method to handle selecting a tab panel and then scrolling to an\nitem in that panel.</p>\n<p>Method will:</p>\n<ul>\n<li>Change to the panel matching the doc item type</li>\n<li>Scroll to that item using the itemtype and name to construct the DOM id</li>\n</ul>\n",
      "itemtype": "method",
      "name": "_scrollToItem",
      "access": "protected",
      "tagname": "",
      "params": [
        {
          "name": "classitem",
          "description": "<p>Backing class item</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "itemtype",
              "description": "Type for item of: `method`/`property`/`event`",
              "type": "String"
            },
            {
              "name": "name",
              "description": "Name of item",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 146,
      "description": "<p>Handles finding the classitem model using the <code>item</code> query param value.\nIf a classitem is found, initiate a scroll.</p>\n",
      "itemtype": "method",
      "name": "_scrollToQueryParamItem",
      "access": "protected",
      "tagname": "",
      "params": [
        {
          "name": "item",
          "description": "<p>The item query param identifying which classitem to scroll to</p>\n",
          "type": "!string"
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 79,
      "description": "<p>The currently active tab. This is controlled by this component to allow\nus to change the tab whenever a documentation item is clicked in the index\npanel.</p>\n",
      "itemtype": "property",
      "name": "activeTab",
      "type": "{string}",
      "access": "protected",
      "tagname": "",
      "default": "indexPanel",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 89,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-tabs-container']",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 24,
      "description": "<p>Array of <em>ALL</em> items for this class. Used to find the type when an item is\nspecified in a query param.</p>\n",
      "itemtype": "property",
      "name": "classitems",
      "type": "{Array}",
      "default": "[]",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 95,
      "description": "<p>The panel that that the tabs should render on creation. The tabs component\ntracks this separately and it needs to be updated separately when a class\npage is loaded with an item query parameter.</p>\n",
      "itemtype": "property",
      "name": "defaultTab",
      "type": "{string}",
      "default": "'indexPanel'",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 176,
      "description": "<p>Handle resetting tabs container to the index panel any time that this\ncomponent's attrs update. The only props passed in to this component are\nthe class items for the container, so we know if they change in any way\nthat this is the right time to update the tabs panel.</p>\n<p>NOTE: GUESS WHAT! This hook doens't only get called when passed props\nchange! There is some crazy behavior where this hook will get called ONCE\nand only ONCE when an internal property changes after the props for this\ncomponent has changed. Super weird. For now we're 'fixing' it by also\npassing in the class name and using that as a check to reset the <code>activeTab</code></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "params": [
        {
          "name": "attrs",
          "description": "<p>Object with <code>oldAttrs</code> and <code>newAttrs</code></p>\n",
          "type": "Object"
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 32,
      "description": "<p>This class' array of event documentation items.</p>\n",
      "itemtype": "property",
      "name": "event",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 218,
      "description": "<p>Action bound to each documentation item in the index panel. Clicking any\nitem will trigger this with the documentation item as an argument. Use\nthe passed doc item to internally call\n{{cross-link class='FountainheadClass.ItemsContainer' item='_scrollToItem'}}\nto scroll to clicked item.</p>\n",
      "itemtype": "method",
      "name": "goToItem",
      "action": "",
      "params": [
        {
          "name": "classitem",
          "description": "<p>Backing classitem</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "itemtype",
              "description": "Type for item of: `method`/`property`/`event`",
              "type": "String"
            },
            {
              "name": "name",
              "description": "Name for classitem",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 202,
      "description": "<p>Check for a passed <code>item</code> query param. When it exists call\n{{cross-link class='FountainheadClass.ItemsContainer' item='_scrollToQueryParamItem'}}\nto scroll to that cross linked item.</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 40,
      "description": "<p>Item query param passed down from controller. When this property is present,\nor changes handle scrolling to the item. When the specified doc class is\nthe same but the item query param is different the model hooks will not be\ncalled, so we need to handle scrolling to the item when it changes.</p>\n",
      "itemtype": "property",
      "name": "item",
      "type": "{?string}",
      "default": "null",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 51,
      "description": "<p>This class' array of method documentation items.</p>\n",
      "itemtype": "property",
      "name": "method",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 59,
      "description": "<p>Name of the class. Is checked in <code>didUpdateAttrs</code> to know if the tabs\nshould be reset to the index panel</p>\n",
      "itemtype": "property",
      "name": "name",
      "type": "{string}",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 67,
      "description": "<p>This class' array of property documentation items.</p>\n",
      "itemtype": "property",
      "name": "property",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 233,
      "description": "<p>Closure action passed into the tab component. This action is called\nwhenever a tab is clicked with the id of the tab. Use this to update the\ncontrolling <code>activeTab</code> property for the tabs DDAU style.</p>\n",
      "itemtype": "method",
      "name": "tabsChanged",
      "action": "",
      "params": [
        {
          "name": "tab",
          "description": "<p>Backing object for a given tab</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "elementId",
              "description": "The id of the tab, controls current tab displayed",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    }
  ],
  "plugins": [],
  "extensions": [],
  "plugin_for": [],
  "extension_for": [],
  "module": "Addon",
  "file": "addon/components/fountainhead-class/items-container.js",
  "line": 7,
  "description": "<p>Tab container for the class' documentation items. Component handles running\na controlled instance of <code>core-tabs</code> by tracking <code>activeTab</code> internally and\npassing <code>tabsChanged</code> to the <code>core-tabs</code> instance.</p>\n<p>The active tab is reset to the index panel anytime that the <code>name</code> (of the\nclass) changes.</p>\n",
  "is_constructor": 1,
  "extends": "Ember.Component",
  "method": [
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 108,
      "description": "<p>Internal method to handle selecting a tab panel and then scrolling to an\nitem in that panel.</p>\n<p>Method will:</p>\n<ul>\n<li>Change to the panel matching the doc item type</li>\n<li>Scroll to that item using the itemtype and name to construct the DOM id</li>\n</ul>\n",
      "itemtype": "method",
      "name": "_scrollToItem",
      "access": "protected",
      "tagname": "",
      "params": [
        {
          "name": "classitem",
          "description": "<p>Backing class item</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "itemtype",
              "description": "Type for item of: `method`/`property`/`event`",
              "type": "String"
            },
            {
              "name": "name",
              "description": "Name of item",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 146,
      "description": "<p>Handles finding the classitem model using the <code>item</code> query param value.\nIf a classitem is found, initiate a scroll.</p>\n",
      "itemtype": "method",
      "name": "_scrollToQueryParamItem",
      "access": "protected",
      "tagname": "",
      "params": [
        {
          "name": "item",
          "description": "<p>The item query param identifying which classitem to scroll to</p>\n",
          "type": "!string"
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 218,
      "description": "<p>Action bound to each documentation item in the index panel. Clicking any\nitem will trigger this with the documentation item as an argument. Use\nthe passed doc item to internally call\n{{cross-link class='FountainheadClass.ItemsContainer' item='_scrollToItem'}}\nto scroll to clicked item.</p>\n",
      "itemtype": "method",
      "name": "goToItem",
      "action": "",
      "params": [
        {
          "name": "classitem",
          "description": "<p>Backing classitem</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "itemtype",
              "description": "Type for item of: `method`/`property`/`event`",
              "type": "String"
            },
            {
              "name": "name",
              "description": "Name for classitem",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 202,
      "description": "<p>Check for a passed <code>item</code> query param. When it exists call\n{{cross-link class='FountainheadClass.ItemsContainer' item='_scrollToQueryParamItem'}}\nto scroll to that cross linked item.</p>\n",
      "itemtype": "method",
      "name": "init",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 233,
      "description": "<p>Closure action passed into the tab component. This action is called\nwhenever a tab is clicked with the id of the tab. Use this to update the\ncontrolling <code>activeTab</code> property for the tabs DDAU style.</p>\n",
      "itemtype": "method",
      "name": "tabsChanged",
      "action": "",
      "params": [
        {
          "name": "tab",
          "description": "<p>Backing object for a given tab</p>\n",
          "type": "Object",
          "props": [
            {
              "name": "elementId",
              "description": "The id of the tab, controls current tab displayed",
              "type": "String"
            }
          ]
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    }
  ],
  "property": [
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 79,
      "description": "<p>The currently active tab. This is controlled by this component to allow\nus to change the tab whenever a documentation item is clicked in the index\npanel.</p>\n",
      "itemtype": "property",
      "name": "activeTab",
      "type": "{string}",
      "access": "protected",
      "tagname": "",
      "default": "indexPanel",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 89,
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "default": "['fh-tabs-container']",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 24,
      "description": "<p>Array of <em>ALL</em> items for this class. Used to find the type when an item is\nspecified in a query param.</p>\n",
      "itemtype": "property",
      "name": "classitems",
      "type": "{Array}",
      "default": "[]",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 95,
      "description": "<p>The panel that that the tabs should render on creation. The tabs component\ntracks this separately and it needs to be updated separately when a class\npage is loaded with an item query parameter.</p>\n",
      "itemtype": "property",
      "name": "defaultTab",
      "type": "{string}",
      "default": "'indexPanel'",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 32,
      "description": "<p>This class' array of event documentation items.</p>\n",
      "itemtype": "property",
      "name": "event",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 40,
      "description": "<p>Item query param passed down from controller. When this property is present,\nor changes handle scrolling to the item. When the specified doc class is\nthe same but the item query param is different the model hooks will not be\ncalled, so we need to handle scrolling to the item when it changes.</p>\n",
      "itemtype": "property",
      "name": "item",
      "type": "{?string}",
      "default": "null",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 51,
      "description": "<p>This class' array of method documentation items.</p>\n",
      "itemtype": "property",
      "name": "method",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 59,
      "description": "<p>Name of the class. Is checked in <code>didUpdateAttrs</code> to know if the tabs\nshould be reset to the index panel</p>\n",
      "itemtype": "property",
      "name": "name",
      "type": "{string}",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    },
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 67,
      "description": "<p>This class' array of property documentation items.</p>\n",
      "itemtype": "property",
      "name": "property",
      "type": "{Array}",
      "default": "[]",
      "passed": "",
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    }
  ],
  "event": [
    {
      "file": "addon/components/fountainhead-class/items-container.js",
      "line": 176,
      "description": "<p>Handle resetting tabs container to the index panel any time that this\ncomponent's attrs update. The only props passed in to this component are\nthe class items for the container, so we know if they change in any way\nthat this is the right time to update the tabs panel.</p>\n<p>NOTE: GUESS WHAT! This hook doens't only get called when passed props\nchange! There is some crazy behavior where this hook will get called ONCE\nand only ONCE when an internal property changes after the props for this\ncomponent has changed. Super weird. For now we're 'fixing' it by also\npassing in the class name and using that as a check to reset the <code>activeTab</code></p>\n",
      "itemtype": "event",
      "name": "didUpdateAttrs",
      "params": [
        {
          "name": "attrs",
          "description": "<p>Object with <code>oldAttrs</code> and <code>newAttrs</code></p>\n",
          "type": "Object"
        }
      ],
      "class": "FountainheadClass.ItemsContainer",
      "srcFileId": "addon_components_fountainhead-class_items-container.js"
    }
  ],
  "srcFileId": "addon_components_fountainhead-class_items-container.js"
}