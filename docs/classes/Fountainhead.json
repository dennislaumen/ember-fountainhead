{
  "name": "Fountainhead",
  "shortname": "Fountainhead",
  "classitems": [
    {
      "file": "addon/services/fountainhead.js",
      "line": 22,
      "description": "<p>All Fountainhead API requests are prefixed with this namespace. If you\nexport your docs JSON files to a non-default location, or your application\nis served under a namespace you can overwrite this property to match your\nendpoint's root url namespace.</p>\n",
      "itemtype": "property",
      "name": "apiNamespace",
      "type": "{string}",
      "access": "public",
      "tagname": "",
      "default": "'/docs'",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 57,
      "description": "<p>Fires request for documentation meta data and returns the promise. This\nmethod is called in the <code>beforeModel</code> of either the <code>docs</code> or <code>guides</code>\nroute, whichever is entered first.</p>\n<p>NOTE: If the request fails service property {{cross-link item='metaError'}}\nwill be set to <code>true</code>.</p>\n",
      "itemtype": "method",
      "name": "fetchMeta",
      "access": "protected",
      "tagname": "",
      "return": {
        "description": "",
        "type": "Promise"
      },
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 33,
      "description": "<p>Documentation meta fetched from <code>/meta.json</code>. Contains high level map\nof modules and classes available in documentation. Used for sidebar and\nmapping item and return types.\nThis property is initialized to null so that the sidebar has an explicit\nvalue to bind aria-hidden to. When there is no meta, there is no sidebar.</p>\n",
      "itemtype": "property",
      "name": "meta",
      "type": "{?Object}",
      "default": "null",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 44,
      "description": "<p>Flag used by docs route to show getting started instructions if the call for\ndocumentation meta fails.</p>\n",
      "itemtype": "property",
      "name": "metaError",
      "type": "{Boolean}",
      "access": "public",
      "tagname": "",
      "default": "false",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    }
  ],
  "plugins": [],
  "extensions": [],
  "plugin_for": [],
  "extension_for": [],
  "module": "Addon",
  "file": "addon/services/fountainhead.js",
  "line": 6,
  "description": "<p>The Fountainhead service handles fetching the meta data for Fountainhead.\nThis is triggered in the <code>beforeModel</code> of either the <code>docs</code> or <code>guides</code>\nroute.</p>\n<p>The namespace that all API request fire with is defined as <code>apiNamespace</code>.\nIf you need to route requests under a different namespace it can be udpated.</p>\n",
  "is_constructor": 1,
  "extends": "Ember.Service",
  "method": [
    {
      "file": "addon/services/fountainhead.js",
      "line": 57,
      "description": "<p>Fires request for documentation meta data and returns the promise. This\nmethod is called in the <code>beforeModel</code> of either the <code>docs</code> or <code>guides</code>\nroute, whichever is entered first.</p>\n<p>NOTE: If the request fails service property {{cross-link item='metaError'}}\nwill be set to <code>true</code>.</p>\n",
      "itemtype": "method",
      "name": "fetchMeta",
      "access": "protected",
      "tagname": "",
      "return": {
        "description": "",
        "type": "Promise"
      },
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    }
  ],
  "property": [
    {
      "file": "addon/services/fountainhead.js",
      "line": 22,
      "description": "<p>All Fountainhead API requests are prefixed with this namespace. If you\nexport your docs JSON files to a non-default location, or your application\nis served under a namespace you can overwrite this property to match your\nendpoint's root url namespace.</p>\n",
      "itemtype": "property",
      "name": "apiNamespace",
      "type": "{string}",
      "access": "public",
      "tagname": "",
      "default": "'/docs'",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 33,
      "description": "<p>Documentation meta fetched from <code>/meta.json</code>. Contains high level map\nof modules and classes available in documentation. Used for sidebar and\nmapping item and return types.\nThis property is initialized to null so that the sidebar has an explicit\nvalue to bind aria-hidden to. When there is no meta, there is no sidebar.</p>\n",
      "itemtype": "property",
      "name": "meta",
      "type": "{?Object}",
      "default": "null",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    },
    {
      "file": "addon/services/fountainhead.js",
      "line": 44,
      "description": "<p>Flag used by docs route to show getting started instructions if the call for\ndocumentation meta fails.</p>\n",
      "itemtype": "property",
      "name": "metaError",
      "type": "{Boolean}",
      "access": "public",
      "tagname": "",
      "default": "false",
      "class": "Fountainhead",
      "srcFileId": "addon_services_fountainhead.js"
    }
  ],
  "event": [],
  "srcFileId": "addon_services_fountainhead.js"
}