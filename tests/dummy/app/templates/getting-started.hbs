{{! --------------------------------------------------------------------- }}
{{! Getting Started Page
{{! This page will likely become a guide page once we start on that feature
{{! --------------------------------------------------------------------- }}

<div class="page-title">
  <h1>Getting Started</h1>
</div>
<main class="guide-page fh-wrapper">
  <div class="guide-content">
    <section>
      <h4>Installation</h4>
      <p>Install Ember Fountainhead using Ember CLI:</p>
      <p><code>ember install ember-fountainhead</code></p>
      <p class="italic">Currently Ember Fountainhead must be used inside of an Ember application.</p>
    </section>

    <section>
      <h4>Documentation Generation</h4>
      <p>If you already have documentation comments in your source code, generating your documentation files is an Ember command:</p>
      <p><code>ember docs</code></p>
      <p>If you haven't added documentation comments to your souce code, you'll need to write some. Fountainhead uses <a href="https://yui.github.io/yuidoc/" target="_blank">YUIDoc</a> for the source code comment parsing. YUIDoc uses a syntax similar to JSDoc, but does not parse your source code, only the comments.</p>
      <p>See <a href="https://yui.github.io/yuidoc/syntax/index.html" target="_blank">YUIDoc Syntax</a> for details on YUIDoc tags.</p>
    </section>

    <section>
      <h4>Excluding from Production</h4>
      <p>To exclude Fountainhead from your production builds. You can <strong>blacklist</strong> it as part of your <code>ember-cli-build.js</code> configuration using the <code>addons.blacklist</code> array:</p>
      <pre>
        <code>
          module.exports = function(defaults) {
            var app = new EmberApp(defaults, {
              addons: {
                blacklist: EmberApp.env() === 'production' ? ['ember-fountainhead'] : []
              }
            });

            return app.toTree();
          };
        </code>
      </pre>
    </section>

    <section>
      <h4>Configuration</h4>
      <p>Configuration for this addon and the build scripts can be specified in a <code>fountainhead.js</code> file located in your repo's root.</p>

      <pre>
        <code>
          module.exports = {
            entry: ['app'], // Defaults to 'app' for apps and 'addon' for addons
            output: {
              path: 'public/docs' // path to save generated docs to
              filename: 'fountainhead-data.json' // name to save generated file to
            }
          }
        </code>
      </pre>

      <p class="italic">Note that all paths are resolved using <code>path.resolve</code>, meaning that either a relative path or paths starting with <code>./</code> will resolve to your project's root directory.</p>
    </section>

    <section>
      <h4>Addon Styles</h4>
      <p>Ember Fountainhead's styles are bundled into your <code>vendor.css</code> by default. The styles are scoped to addon namespaces to prevent conflicts with your application's styles. You can disable style sheet bundling by setting <code>includeVendorStyles</code> to false in your <code>fountainhead.js</code> configuration file.</p>

      <p>If you'd like to extend Fountainhead's styles and your project uses SASS, you can turn off the auto bundle to the vendor file and directly import Fountianhead into your SASS:</p> <p><code>@import 'ember-fountainhead'</code></p>
      <p>See the themes in <code>app/styles/ember-fountianhead/themes</code> for variables you can override.</p>
    </section>

    <h4>Ember Component Playground</h4>
    <p>The <a href="https://github.com/healthsparq/ember-component-playground" target="_blank">Ember Component Playground</a> addon is a great compliment to this addon that allows real time examples of components. See the repo for installation.</p>
  </div>
  {{sidebar-nav}}
</main>
