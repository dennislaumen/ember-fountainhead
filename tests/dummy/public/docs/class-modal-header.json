{
  "name": "Component.Modal.ModalHeader",
  "shortname": "Component.Modal.ModalHeader",
  "classitems": [
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 55,
      "description": "Property bound to component id for usability",
      "itemtype": "property",
      "name": "aria-labelledby",
      "type": "{string}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 61,
      "description": "If you want that header to have some pop",
      "itemtype": "property",
      "name": "brand",
      "type": "{string}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 67,
      "description": "Action closure passed in to modal. Is mounted to the modal background for\nclose on click (unless 'hideBackground' is true)",
      "itemtype": "property",
      "name": "closeModal",
      "type": "{function}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 74,
      "description": "Unique identifier yielded by the `modal-component` that should be set as\nthe id of this component's `<header>` element for usability.",
      "itemtype": "property",
      "name": "modalId",
      "deprecated": true,
      "type": "{string}",
      "default": "''",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 83,
      "description": "String to use as modal header title",
      "itemtype": "property",
      "name": "title",
      "deprecated": true,
      "type": "{string}",
      "default": "''",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 95,
      "description": "Computed css class bound to component. Handled by component to allow for\nflexibility in future updates to branding class names",
      "itemtype": "property",
      "name": "brandClass",
      "type": "{string}",
      "class": "Component.Modal.ModalHeader",
      "subprops": [
        {
          "name": "'brand'",
          "description": ""
        }
      ]
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 103,
      "description": "Handle binding brand and basic related css class names",
      "itemtype": "property",
      "name": "classNameBindings",
      "type": "{Array}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 109,
      "description": "Bind class names",
      "itemtype": "property",
      "name": "classNames",
      "type": "{Array}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 115,
      "description": "Dat layout",
      "itemtype": "property",
      "name": "layout",
      "type": "{Object}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 121,
      "description": "Wrapping `<header>`",
      "itemtype": "property",
      "name": "tagName",
      "type": "{string}",
      "class": "Component.Modal.ModalHeader"
    },
    {
      "file": "addon/components/core-modal/header/component.js",
      "line": 130,
      "description": "Set id of componet to aria-labelledby on init for usablity",
      "itemtype": "event",
      "name": "init",
      "class": "Component.Modal.ModalHeader"
    }
  ],
  "plugins": [],
  "extensions": [],
  "plugin_for": [],
  "extension_for": [],
  "file": "addon/components/core-modal/header/component.js",
  "line": 5,
  "description": "<p>Use to handle rendering a header for a UICore modal. Can be used as a block\ncomponent or as an inline component.</p>\n<h3>Usage:</h3>\n<p>Inline form renders a <code>&lt;header&gt;</code> with a close X and the passed title:</p>\n<pre class=\"hljs handlebars\"><code><span class=\"xml\"></span><span class=\"hljs-template-variable\">\\{{modal.modal-header title=\"A Neat Modal!\" closeModal=(<span class=\"hljs-builtin-name\">action</span> \"closeModal\" target=someService) modalId=modalId}}</span><span class=\"xml\">\n</span></code></pre>\n<p>Block form allows for putting any markup or components wrapped inside a\n<code>&lt;header&gt;</code> tag (See the search by plan modal for a real example):</p>\n<pre class=\"hljs handlebars\"><code><span class=\"xml\"></span><span class=\"hljs-template-tag\">\\{{#<span class=\"hljs-name\">modal.modal-header</span> closeModal=(action <span class=\"hljs-string\">\"closeModal\"</span> target=someService) modalId=modalId}}</span><span class=\"xml\">\n   </span><span class=\"hljs-template-variable\">\\{{some-component passAny=\"props\"}}</span><span class=\"xml\">\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>Along with some other header content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n</span><span class=\"hljs-template-tag\">\\{{/<span class=\"hljs-name\">modal.modal-header</span>}}</span><span class=\"xml\">\n</span></code></pre>\n<h4>Configurations</h4>\n<ul>\n<li>Branding the header with any of the client colors is possible by passing\nproperty <code>branding</code> with the class name of the color. EG if you would like\na modal with a red alert branded header, you could pass <code>brand=&quot;alert-color&quot;</code></li>\n</ul>\n<h4>modalId Property</h4>\n<p>This component assumes that you are going to pass in a modalId property. This\nprop will be set as the <code>id</code> for the <code>&lt;header&gt;</code> element. This is for 508\ncompliance with <code>aria-labelledby</code>. As long as you are using this header with\na UICore component, the appropriate modalId will be the first yielded data of\nthe component:</p>\n<pre class=\"hljs handlebars\"><code><span class=\"xml\"></span><span class=\"hljs-template-tag\">\\{{#<span class=\"hljs-name\">modal.modal-component</span> open=someService.modalActive closeModal=(action <span class=\"hljs-string\">\"closeModal\"</span> target=someService) as | modalId |}}</span><span class=\"xml\">\n  </span><span class=\"hljs-template-variable\">\\{{modal.modal-header title=\"A Neat Modal!\" closeModal=(<span class=\"hljs-builtin-name\">action</span> \"closeModal\" target=someService) modalId=modalId}}</span><span class=\"xml\">\n</span><span class=\"hljs-template-tag\">\\{{/<span class=\"hljs-name\">modal.modal-component</span>}}</span><span class=\"xml\">\n</span></code></pre>\n<p>Note the <code>as | modalId |</code> used when creating <code>modal.modal-component</code>. This is\nthe unique identifier that is created by <code>modal-component</code> and set as the\n<code>aria-labelledby</code> attribute on the modalâ€™s <code>&lt;div&gt;</code>. It is yielded so that the\nsame identifier can be passed to <code>modal-header</code> where it is set as the <code>id</code>\nof the descriptive <code>&lt;header&gt;</code> element.</p>\n",
  "is_constructor": 1,
  "extends": "Ember.Component"
}
